//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HRPortal.HRPortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HRPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal")]
    public partial class HRPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FngetConflictLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetSingleConflictOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditConflictLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteConflictLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitToCueLegalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveCasehearinggeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmithearingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAdvocateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveSurveyOpenEndedQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveSurveyClosedEndedQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FncreatePurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FncreateRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPurchaseReqApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePurchaseReqReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateStoreReqReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStoreRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnValidateLeaveAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLeaveForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanceLeaveApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImprestObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitVehicleFuelRequestDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFuelFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFuelFromImprestMemo2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestMemoApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMemberFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateImprestSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStaffClaimApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateP9OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddemployeepassportphotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveStaffFromTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFleetRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitioNonStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitioLoadItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFleetRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLoadItemsTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNonStaffTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFuelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateCSPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateAWPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateBoardPCReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestJDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnsuggestsubindicatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAditionalInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveAditionalInitiativeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendStaffPerformanceContractApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLockStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSignStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAnnualWorkplanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSelectedAdditionalActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateIndividualPcReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateIndividualPcSubIndicatorReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertJDTargetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPerformanceLogEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogandSubPlogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePerformanceTargetLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPlogApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelPlogApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPlogSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoadCompetenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppraisalSuggestObjectivesOutcomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddEvaluationPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateStandardAppraisalReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLegalAdviceCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateLegalAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendLegalAdviceNotificationToApplicantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendLegalAdviceNotificationToCueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetOpenLegalAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetSubmittedLegalAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetPendingVerdictLegalAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCloseLegalAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetClosedLegalAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateGiftGivenOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertGiftGivenLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditGiftGivenLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveGiftGivenLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetGiftGivenLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitGiftGivenOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendGiftGivenNotificationToApplicantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendGiftGivenNotificationToCueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetOpenGiftGivenOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetSubmittedGiftGivenOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateGiftReceivedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertGiftReceivedLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetOpenGiftReceivedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetSubmittedGiftReceivedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitGiftReceivedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendGiftReceivedNotificationToApplicantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendGiftReceivedNotificationToCueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateConflictofInterestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertConflictLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetOpenConflictOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetSubmittedConflictOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HRPortal() {
            this.Url = global::HRPortal.Properties.Settings.Default.HRPortal_HRPortal_HRPortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FngetConflictLinesCompletedEventHandler FngetConflictLinesCompleted;
        
        /// <remarks/>
        public event FngetSingleConflictCompletedEventHandler FngetSingleConflictCompleted;
        
        /// <remarks/>
        public event FnEditConflictLineCompletedEventHandler FnEditConflictLineCompleted;
        
        /// <remarks/>
        public event FnDeleteConflictLineCompletedEventHandler FnDeleteConflictLineCompleted;
        
        /// <remarks/>
        public event FnSubmitToCueLegalDetailsCompletedEventHandler FnSubmitToCueLegalDetailsCompleted;
        
        /// <remarks/>
        public event FnSaveCasehearinggeneralDetailsCompletedEventHandler FnSaveCasehearinggeneralDetailsCompleted;
        
        /// <remarks/>
        public event FnSubmithearingCompletedEventHandler FnSubmithearingCompleted;
        
        /// <remarks/>
        public event FnSaveAdvocateCompletedEventHandler FnSaveAdvocateCompleted;
        
        /// <remarks/>
        public event FnSaveSurveyOpenEndedQuestionCompletedEventHandler FnSaveSurveyOpenEndedQuestionCompleted;
        
        /// <remarks/>
        public event FnSaveSurveyClosedEndedQuestionCompletedEventHandler FnSaveSurveyClosedEndedQuestionCompleted;
        
        /// <remarks/>
        public event FnSubmitSurveyCompletedEventHandler FnSubmitSurveyCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event FncreatePurchaseRequisitionCompletedEventHandler FncreatePurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event FncreateRequisitionLineCompletedEventHandler FncreateRequisitionLineCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event DeleteRequisitionLineCompletedEventHandler DeleteRequisitionLineCompleted;
        
        /// <remarks/>
        public event SendPurchaseRequisitionApprovalCompletedEventHandler SendPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CancelPurchaseReqApprovalCompletedEventHandler CancelPurchaseReqApprovalCompleted;
        
        /// <remarks/>
        public event FnGeneratePurchaseReqReportCompletedEventHandler FnGeneratePurchaseReqReportCompleted;
        
        /// <remarks/>
        public event FnGenerateStoreReqReportCompletedEventHandler FnGenerateStoreReqReportCompleted;
        
        /// <remarks/>
        public event CreateStoreRequisitionCompletedEventHandler CreateStoreRequisitionCompleted;
        
        /// <remarks/>
        public event CreateStoreRequisitionLineCompletedEventHandler CreateStoreRequisitionLineCompleted;
        
        /// <remarks/>
        public event FnCreateLeaveApplicationCompletedEventHandler FnCreateLeaveApplicationCompleted;
        
        /// <remarks/>
        public event FnValidateLeaveAttachmentsCompletedEventHandler FnValidateLeaveAttachmentsCompleted;
        
        /// <remarks/>
        public event SendLeaveForApprovalCompletedEventHandler SendLeaveForApprovalCompleted;
        
        /// <remarks/>
        public event CanceLeaveApprovalCompletedEventHandler CanceLeaveApprovalCompleted;
        
        /// <remarks/>
        public event ImprestGeneralDetailsCompletedEventHandler ImprestGeneralDetailsCompleted;
        
        /// <remarks/>
        public event GetImprestObjectiveCompletedEventHandler GetImprestObjectiveCompleted;
        
        /// <remarks/>
        public event AddTeamMemberCompletedEventHandler AddTeamMemberCompleted;
        
        /// <remarks/>
        public event AddFuelCompletedEventHandler AddFuelCompleted;
        
        /// <remarks/>
        public event AddCasualsCompletedEventHandler AddCasualsCompleted;
        
        /// <remarks/>
        public event AddOtherCostsCompletedEventHandler AddOtherCostsCompleted;
        
        /// <remarks/>
        public event SubmitVehicleFuelRequestDetails2CompletedEventHandler SubmitVehicleFuelRequestDetails2Completed;
        
        /// <remarks/>
        public event EditTeamMemberCompletedEventHandler EditTeamMemberCompleted;
        
        /// <remarks/>
        public event RemoveFuelFromImprestMemoCompletedEventHandler RemoveFuelFromImprestMemoCompleted;
        
        /// <remarks/>
        public event RemoveFuelFromImprestMemo2CompletedEventHandler RemoveFuelFromImprestMemo2Completed;
        
        /// <remarks/>
        public event EditFuelCompletedEventHandler EditFuelCompleted;
        
        /// <remarks/>
        public event RemoveCasualsCompletedEventHandler RemoveCasualsCompleted;
        
        /// <remarks/>
        public event EditCasualsCompletedEventHandler EditCasualsCompleted;
        
        /// <remarks/>
        public event RemoveOtherCostsCompletedEventHandler RemoveOtherCostsCompleted;
        
        /// <remarks/>
        public event EditOtherCostsCompletedEventHandler EditOtherCostsCompleted;
        
        /// <remarks/>
        public event SendImprestMemoApprovalCompletedEventHandler SendImprestMemoApprovalCompleted;
        
        /// <remarks/>
        public event RemoveMemberFromImprestMemoCompletedEventHandler RemoveMemberFromImprestMemoCompleted;
        
        /// <remarks/>
        public event SendImprestRequisitionApprovalCompletedEventHandler SendImprestRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CreateImprestSurrenderCompletedEventHandler CreateImprestSurrenderCompleted;
        
        /// <remarks/>
        public event SendImprestSurrenderApprovalCompletedEventHandler SendImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event UpdateSurrenderLineCompletedEventHandler UpdateSurrenderLineCompleted;
        
        /// <remarks/>
        public event SendStaffClaimApprovalCompletedEventHandler SendStaffClaimApprovalCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimCompletedEventHandler CreateStaffClaimCompleted;
        
        /// <remarks/>
        public event DeleteStaffClaimLineCompletedEventHandler DeleteStaffClaimLineCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimLineCompletedEventHandler CreateStaffClaimLineCompleted;
        
        /// <remarks/>
        public event EditStaffClaimLineCompletedEventHandler EditStaffClaimLineCompleted;
        
        /// <remarks/>
        public event GeneratePayslipCompletedEventHandler GeneratePayslipCompleted;
        
        /// <remarks/>
        public event GenerateP9CompletedEventHandler GenerateP9Completed;
        
        /// <remarks/>
        public event AddemployeepassportphotoCompletedEventHandler AddemployeepassportphotoCompleted;
        
        /// <remarks/>
        public event RemoveStaffFromTravelRequisitionCompletedEventHandler RemoveStaffFromTravelRequisitionCompleted;
        
        /// <remarks/>
        public event CreateFleetRequisitionCompletedEventHandler CreateFleetRequisitionCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionStaffCompletedEventHandler AddFleetRequisitionStaffCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitioNonStaffCompletedEventHandler AddFleetRequisitioNonStaffCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitioLoadItemsCompletedEventHandler AddFleetRequisitioLoadItemsCompleted;
        
        /// <remarks/>
        public event SendFleetRequisitionApprovalCompletedEventHandler SendFleetRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event RemoveLoadItemsTravelRequisitionCompletedEventHandler RemoveLoadItemsTravelRequisitionCompleted;
        
        /// <remarks/>
        public event RemoveNonStaffTravelRequisitionCompletedEventHandler RemoveNonStaffTravelRequisitionCompleted;
        
        /// <remarks/>
        public event RemoveFuelDetailsCompletedEventHandler RemoveFuelDetailsCompleted;
        
        /// <remarks/>
        public event FnGenerateCSPReportCompletedEventHandler FnGenerateCSPReportCompleted;
        
        /// <remarks/>
        public event FnGenerateAWPReportCompletedEventHandler FnGenerateAWPReportCompleted;
        
        /// <remarks/>
        public event FnGenerateBoardPCReportCompletedEventHandler FnGenerateBoardPCReportCompleted;
        
        /// <remarks/>
        public event FnNewStaffPerformanceContractCompletedEventHandler FnNewStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSuggestJDCompletedEventHandler FnSuggestJDCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedCoreInitiativesCompletedEventHandler FnSubmitSelectedCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnsuggestsubindicatorsCompletedEventHandler FnsuggestsubindicatorsCompleted;
        
        /// <remarks/>
        public event FnSaveCoreInitiativesCompletedEventHandler FnSaveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnRemoveCoreInitiativesCompletedEventHandler FnRemoveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnSaveAditionalInitiativesCompletedEventHandler FnSaveAditionalInitiativesCompleted;
        
        /// <remarks/>
        public event FnRemoveAditionalInitiativeCompletedEventHandler FnRemoveAditionalInitiativeCompleted;
        
        /// <remarks/>
        public event FnDeleteIndividualCardSubActivitiesCompletedEventHandler FnDeleteIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnNewIndividualCardSubActivitiesCompletedEventHandler FnNewIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnEditIndividualCardSubActivitiesCompletedEventHandler FnEditIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnSendStaffPerformanceContractApprovalCompletedEventHandler FnSendStaffPerformanceContractApprovalCompleted;
        
        /// <remarks/>
        public event FnCancelStaffPerformanceContractCompletedEventHandler FnCancelStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnLockStaffPerformanceContractCompletedEventHandler FnLockStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSignStaffPerformanceContractCompletedEventHandler FnSignStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnGetAnnualWorkplanLinesCompletedEventHandler FnGetAnnualWorkplanLinesCompleted;
        
        /// <remarks/>
        public event FnInsertSelectedAdditionalActivitiesCompletedEventHandler FnInsertSelectedAdditionalActivitiesCompleted;
        
        /// <remarks/>
        public event FnGenerateIndividualPcReportCompletedEventHandler FnGenerateIndividualPcReportCompleted;
        
        /// <remarks/>
        public event FnGenerateIndividualPcSubIndicatorReportCompletedEventHandler FnGenerateIndividualPcSubIndicatorReportCompleted;
        
        /// <remarks/>
        public event FnInsertJDTargetsCompletedEventHandler FnInsertJDTargetsCompleted;
        
        /// <remarks/>
        public event FnNewPerformanceLogEntryCompletedEventHandler FnNewPerformanceLogEntryCompleted;
        
        /// <remarks/>
        public event FnSuggestPlogandSubPlogDataCompletedEventHandler FnSuggestPlogandSubPlogDataCompleted;
        
        /// <remarks/>
        public event FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler FnUpdatePerformanceTargetLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnSendPlogApprovalCompletedEventHandler FnSendPlogApprovalCompleted;
        
        /// <remarks/>
        public event FnCancelPlogApprovalCompletedEventHandler FnCancelPlogApprovalCompleted;
        
        /// <remarks/>
        public event FnInsertPlogSubActivitiesCompletedEventHandler FnInsertPlogSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnNewStandardAppraisalCompletedEventHandler FnNewStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnLoadCompetenciesCompletedEventHandler FnLoadCompetenciesCompleted;
        
        /// <remarks/>
        public event FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler FnAppraisalSuggestObjectivesOutcomesCompleted;
        
        /// <remarks/>
        public event FnAddEvaluationPIPCompletedEventHandler FnAddEvaluationPIPCompleted;
        
        /// <remarks/>
        public event FnGenerateStandardAppraisalReportCompletedEventHandler FnGenerateStandardAppraisalReportCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalCompletedEventHandler FnSubmitStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnLegalAdviceCategoriesCompletedEventHandler FnLegalAdviceCategoriesCompleted;
        
        /// <remarks/>
        public event FnCreateLegalAdviceCompletedEventHandler FnCreateLegalAdviceCompleted;
        
        /// <remarks/>
        public event FnSendLegalAdviceNotificationToApplicantCompletedEventHandler FnSendLegalAdviceNotificationToApplicantCompleted;
        
        /// <remarks/>
        public event FnSendLegalAdviceNotificationToCueCompletedEventHandler FnSendLegalAdviceNotificationToCueCompleted;
        
        /// <remarks/>
        public event FngetOpenLegalAdviceCompletedEventHandler FngetOpenLegalAdviceCompleted;
        
        /// <remarks/>
        public event FngetSubmittedLegalAdviceCompletedEventHandler FngetSubmittedLegalAdviceCompleted;
        
        /// <remarks/>
        public event FngetPendingVerdictLegalAdviceCompletedEventHandler FngetPendingVerdictLegalAdviceCompleted;
        
        /// <remarks/>
        public event FnCloseLegalAdviceCompletedEventHandler FnCloseLegalAdviceCompleted;
        
        /// <remarks/>
        public event FngetClosedLegalAdviceCompletedEventHandler FngetClosedLegalAdviceCompleted;
        
        /// <remarks/>
        public event FnCreateGiftGivenCompletedEventHandler FnCreateGiftGivenCompleted;
        
        /// <remarks/>
        public event FnInsertGiftGivenLinesCompletedEventHandler FnInsertGiftGivenLinesCompleted;
        
        /// <remarks/>
        public event FnEditGiftGivenLineCompletedEventHandler FnEditGiftGivenLineCompleted;
        
        /// <remarks/>
        public event FnRemoveGiftGivenLineCompletedEventHandler FnRemoveGiftGivenLineCompleted;
        
        /// <remarks/>
        public event FngetGiftGivenLinesCompletedEventHandler FngetGiftGivenLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitGiftGivenCompletedEventHandler FnSubmitGiftGivenCompleted;
        
        /// <remarks/>
        public event FnSendGiftGivenNotificationToApplicantCompletedEventHandler FnSendGiftGivenNotificationToApplicantCompleted;
        
        /// <remarks/>
        public event FnSendGiftGivenNotificationToCueCompletedEventHandler FnSendGiftGivenNotificationToCueCompleted;
        
        /// <remarks/>
        public event FngetOpenGiftGivenCompletedEventHandler FngetOpenGiftGivenCompleted;
        
        /// <remarks/>
        public event FngetSubmittedGiftGivenCompletedEventHandler FngetSubmittedGiftGivenCompleted;
        
        /// <remarks/>
        public event FnCreateGiftReceivedCompletedEventHandler FnCreateGiftReceivedCompleted;
        
        /// <remarks/>
        public event FnInsertGiftReceivedLinesCompletedEventHandler FnInsertGiftReceivedLinesCompleted;
        
        /// <remarks/>
        public event FngetOpenGiftReceivedCompletedEventHandler FngetOpenGiftReceivedCompleted;
        
        /// <remarks/>
        public event FngetSubmittedGiftReceivedCompletedEventHandler FngetSubmittedGiftReceivedCompleted;
        
        /// <remarks/>
        public event FnSubmitGiftReceivedCompletedEventHandler FnSubmitGiftReceivedCompleted;
        
        /// <remarks/>
        public event FnSendGiftReceivedNotificationToApplicantCompletedEventHandler FnSendGiftReceivedNotificationToApplicantCompleted;
        
        /// <remarks/>
        public event FnSendGiftReceivedNotificationToCueCompletedEventHandler FnSendGiftReceivedNotificationToCueCompleted;
        
        /// <remarks/>
        public event FnCreateConflictofInterestCompletedEventHandler FnCreateConflictofInterestCompleted;
        
        /// <remarks/>
        public event FnInsertConflictLinesCompletedEventHandler FnInsertConflictLinesCompleted;
        
        /// <remarks/>
        public event FngetOpenConflictCompletedEventHandler FngetOpenConflictCompleted;
        
        /// <remarks/>
        public event FngetSubmittedConflictCompletedEventHandler FngetSubmittedConflictCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetConflictLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetConflictLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetConflictLines(string docNo) {
            object[] results = this.Invoke("FngetConflictLines", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetConflictLinesAsync(string docNo) {
            this.FngetConflictLinesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FngetConflictLinesAsync(string docNo, object userState) {
            if ((this.FngetConflictLinesOperationCompleted == null)) {
                this.FngetConflictLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetConflictLinesOperationCompleted);
            }
            this.InvokeAsync("FngetConflictLines", new object[] {
                        docNo}, this.FngetConflictLinesOperationCompleted, userState);
        }
        
        private void OnFngetConflictLinesOperationCompleted(object arg) {
            if ((this.FngetConflictLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetConflictLinesCompleted(this, new FngetConflictLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetSingleConflict", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetSingleConflict_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetSingleConflict(string empNo, string docNo) {
            object[] results = this.Invoke("FngetSingleConflict", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetSingleConflictAsync(string empNo, string docNo) {
            this.FngetSingleConflictAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FngetSingleConflictAsync(string empNo, string docNo, object userState) {
            if ((this.FngetSingleConflictOperationCompleted == null)) {
                this.FngetSingleConflictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetSingleConflictOperationCompleted);
            }
            this.InvokeAsync("FngetSingleConflict", new object[] {
                        empNo,
                        docNo}, this.FngetSingleConflictOperationCompleted, userState);
        }
        
        private void OnFngetSingleConflictOperationCompleted(object arg) {
            if ((this.FngetSingleConflictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetSingleConflictCompleted(this, new FngetSingleConflictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditConflictLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditConflictLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditConflictLine(int lineNo, string docNo, string nature, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datenatured) {
            object[] results = this.Invoke("FnEditConflictLine", new object[] {
                        lineNo,
                        docNo,
                        nature,
                        datenatured});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditConflictLineAsync(int lineNo, string docNo, string nature, System.DateTime datenatured) {
            this.FnEditConflictLineAsync(lineNo, docNo, nature, datenatured, null);
        }
        
        /// <remarks/>
        public void FnEditConflictLineAsync(int lineNo, string docNo, string nature, System.DateTime datenatured, object userState) {
            if ((this.FnEditConflictLineOperationCompleted == null)) {
                this.FnEditConflictLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditConflictLineOperationCompleted);
            }
            this.InvokeAsync("FnEditConflictLine", new object[] {
                        lineNo,
                        docNo,
                        nature,
                        datenatured}, this.FnEditConflictLineOperationCompleted, userState);
        }
        
        private void OnFnEditConflictLineOperationCompleted(object arg) {
            if ((this.FnEditConflictLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditConflictLineCompleted(this, new FnEditConflictLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteConflictLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteConflictLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteConflictLine(string docNo, int lineNo) {
            object[] results = this.Invoke("FnDeleteConflictLine", new object[] {
                        docNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteConflictLineAsync(string docNo, int lineNo) {
            this.FnDeleteConflictLineAsync(docNo, lineNo, null);
        }
        
        /// <remarks/>
        public void FnDeleteConflictLineAsync(string docNo, int lineNo, object userState) {
            if ((this.FnDeleteConflictLineOperationCompleted == null)) {
                this.FnDeleteConflictLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteConflictLineOperationCompleted);
            }
            this.InvokeAsync("FnDeleteConflictLine", new object[] {
                        docNo,
                        lineNo}, this.FnDeleteConflictLineOperationCompleted, userState);
        }
        
        private void OnFnDeleteConflictLineOperationCompleted(object arg) {
            if ((this.FnDeleteConflictLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteConflictLineCompleted(this, new FnDeleteConflictLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitToCueLegalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitToCueLegalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitToCueLegalDetails(string empNo, string docNo) {
            object[] results = this.Invoke("FnSubmitToCueLegalDetails", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitToCueLegalDetailsAsync(string empNo, string docNo) {
            this.FnSubmitToCueLegalDetailsAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitToCueLegalDetailsAsync(string empNo, string docNo, object userState) {
            if ((this.FnSubmitToCueLegalDetailsOperationCompleted == null)) {
                this.FnSubmitToCueLegalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitToCueLegalDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSubmitToCueLegalDetails", new object[] {
                        empNo,
                        docNo}, this.FnSubmitToCueLegalDetailsOperationCompleted, userState);
        }
        
        private void OnFnSubmitToCueLegalDetailsOperationCompleted(object arg) {
            if ((this.FnSubmitToCueLegalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitToCueLegalDetailsCompleted(this, new FnSubmitToCueLegalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveCasehearinggeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveCasehearinggeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveCasehearinggeneralDetails(string docNo, string txtcaseentry, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime txtlasthearingdate, string txtpreceedings, int txtattendance, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime txtmentiondate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime txtnexthearingdate, string txtdecision, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime txtbringuphearingdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime txtbringupmentiondate, string coram) {
            object[] results = this.Invoke("FnSaveCasehearinggeneralDetails", new object[] {
                        docNo,
                        txtcaseentry,
                        txtlasthearingdate,
                        txtpreceedings,
                        txtattendance,
                        txtmentiondate,
                        txtnexthearingdate,
                        txtdecision,
                        txtbringuphearingdate,
                        txtbringupmentiondate,
                        coram});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveCasehearinggeneralDetailsAsync(string docNo, string txtcaseentry, System.DateTime txtlasthearingdate, string txtpreceedings, int txtattendance, System.DateTime txtmentiondate, System.DateTime txtnexthearingdate, string txtdecision, System.DateTime txtbringuphearingdate, System.DateTime txtbringupmentiondate, string coram) {
            this.FnSaveCasehearinggeneralDetailsAsync(docNo, txtcaseentry, txtlasthearingdate, txtpreceedings, txtattendance, txtmentiondate, txtnexthearingdate, txtdecision, txtbringuphearingdate, txtbringupmentiondate, coram, null);
        }
        
        /// <remarks/>
        public void FnSaveCasehearinggeneralDetailsAsync(string docNo, string txtcaseentry, System.DateTime txtlasthearingdate, string txtpreceedings, int txtattendance, System.DateTime txtmentiondate, System.DateTime txtnexthearingdate, string txtdecision, System.DateTime txtbringuphearingdate, System.DateTime txtbringupmentiondate, string coram, object userState) {
            if ((this.FnSaveCasehearinggeneralDetailsOperationCompleted == null)) {
                this.FnSaveCasehearinggeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveCasehearinggeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSaveCasehearinggeneralDetails", new object[] {
                        docNo,
                        txtcaseentry,
                        txtlasthearingdate,
                        txtpreceedings,
                        txtattendance,
                        txtmentiondate,
                        txtnexthearingdate,
                        txtdecision,
                        txtbringuphearingdate,
                        txtbringupmentiondate,
                        coram}, this.FnSaveCasehearinggeneralDetailsOperationCompleted, userState);
        }
        
        private void OnFnSaveCasehearinggeneralDetailsOperationCompleted(object arg) {
            if ((this.FnSaveCasehearinggeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveCasehearinggeneralDetailsCompleted(this, new FnSaveCasehearinggeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmithearing", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmithearing_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmithearing(int docNo) {
            object[] results = this.Invoke("FnSubmithearing", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmithearingAsync(int docNo) {
            this.FnSubmithearingAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmithearingAsync(int docNo, object userState) {
            if ((this.FnSubmithearingOperationCompleted == null)) {
                this.FnSubmithearingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmithearingOperationCompleted);
            }
            this.InvokeAsync("FnSubmithearing", new object[] {
                        docNo}, this.FnSubmithearingOperationCompleted, userState);
        }
        
        private void OnFnSubmithearingOperationCompleted(object arg) {
            if ((this.FnSubmithearingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmithearingCompleted(this, new FnSubmithearingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveAdvocate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveAdvocate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAdvocate(int headerNo, string advocate) {
            object[] results = this.Invoke("FnSaveAdvocate", new object[] {
                        headerNo,
                        advocate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAdvocateAsync(int headerNo, string advocate) {
            this.FnSaveAdvocateAsync(headerNo, advocate, null);
        }
        
        /// <remarks/>
        public void FnSaveAdvocateAsync(int headerNo, string advocate, object userState) {
            if ((this.FnSaveAdvocateOperationCompleted == null)) {
                this.FnSaveAdvocateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAdvocateOperationCompleted);
            }
            this.InvokeAsync("FnSaveAdvocate", new object[] {
                        headerNo,
                        advocate}, this.FnSaveAdvocateOperationCompleted, userState);
        }
        
        private void OnFnSaveAdvocateOperationCompleted(object arg) {
            if ((this.FnSaveAdvocateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAdvocateCompleted(this, new FnSaveAdvocateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveSurveyOpenEndedQuestion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveSurveyOpenEndedQuestion_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveSurveyOpenEndedQuestion(string docno, string sectioncode, string questionId, string answer) {
            object[] results = this.Invoke("FnSaveSurveyOpenEndedQuestion", new object[] {
                        docno,
                        sectioncode,
                        questionId,
                        answer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveSurveyOpenEndedQuestionAsync(string docno, string sectioncode, string questionId, string answer) {
            this.FnSaveSurveyOpenEndedQuestionAsync(docno, sectioncode, questionId, answer, null);
        }
        
        /// <remarks/>
        public void FnSaveSurveyOpenEndedQuestionAsync(string docno, string sectioncode, string questionId, string answer, object userState) {
            if ((this.FnSaveSurveyOpenEndedQuestionOperationCompleted == null)) {
                this.FnSaveSurveyOpenEndedQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveSurveyOpenEndedQuestionOperationCompleted);
            }
            this.InvokeAsync("FnSaveSurveyOpenEndedQuestion", new object[] {
                        docno,
                        sectioncode,
                        questionId,
                        answer}, this.FnSaveSurveyOpenEndedQuestionOperationCompleted, userState);
        }
        
        private void OnFnSaveSurveyOpenEndedQuestionOperationCompleted(object arg) {
            if ((this.FnSaveSurveyOpenEndedQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveSurveyOpenEndedQuestionCompleted(this, new FnSaveSurveyOpenEndedQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveSurveyClosedEndedQuestion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveSurveyClosedEndedQuestion_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveSurveyClosedEndedQuestion(string docno, string sectioncode, string questionId, string answer) {
            object[] results = this.Invoke("FnSaveSurveyClosedEndedQuestion", new object[] {
                        docno,
                        sectioncode,
                        questionId,
                        answer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveSurveyClosedEndedQuestionAsync(string docno, string sectioncode, string questionId, string answer) {
            this.FnSaveSurveyClosedEndedQuestionAsync(docno, sectioncode, questionId, answer, null);
        }
        
        /// <remarks/>
        public void FnSaveSurveyClosedEndedQuestionAsync(string docno, string sectioncode, string questionId, string answer, object userState) {
            if ((this.FnSaveSurveyClosedEndedQuestionOperationCompleted == null)) {
                this.FnSaveSurveyClosedEndedQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveSurveyClosedEndedQuestionOperationCompleted);
            }
            this.InvokeAsync("FnSaveSurveyClosedEndedQuestion", new object[] {
                        docno,
                        sectioncode,
                        questionId,
                        answer}, this.FnSaveSurveyClosedEndedQuestionOperationCompleted, userState);
        }
        
        private void OnFnSaveSurveyClosedEndedQuestionOperationCompleted(object arg) {
            if ((this.FnSaveSurveyClosedEndedQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveSurveyClosedEndedQuestionCompleted(this, new FnSaveSurveyClosedEndedQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSurvey", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSurvey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSurvey(string docNo) {
            object[] results = this.Invoke("FnSubmitSurvey", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSurveyAsync(string docNo) {
            this.FnSubmitSurveyAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitSurveyAsync(string docNo, object userState) {
            if ((this.FnSubmitSurveyOperationCompleted == null)) {
                this.FnSubmitSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSurveyOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSurvey", new object[] {
                        docNo}, this.FnSubmitSurveyOperationCompleted, userState);
        }
        
        private void OnFnSubmitSurveyOperationCompleted(object arg) {
            if ((this.FnSubmitSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSurveyCompleted(this, new FnSubmitSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPassword(string employeeNumbera45idNumber) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        employeeNumbera45idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber) {
            this.ResetPasswordAsync(employeeNumbera45idNumber, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        employeeNumbera45idNumber}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FncreatePurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FncreatePurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FncreatePurchaseRequisition(string employeeNo, string requisitionNo, int priorityLevel, int requisitionProductGroup, string itemcategory, string txtdirectorate, string txtdepartment, string desc, string job, string jobtask) {
            object[] results = this.Invoke("FncreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        priorityLevel,
                        requisitionProductGroup,
                        itemcategory,
                        txtdirectorate,
                        txtdepartment,
                        desc,
                        job,
                        jobtask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FncreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, int priorityLevel, int requisitionProductGroup, string itemcategory, string txtdirectorate, string txtdepartment, string desc, string job, string jobtask) {
            this.FncreatePurchaseRequisitionAsync(employeeNo, requisitionNo, priorityLevel, requisitionProductGroup, itemcategory, txtdirectorate, txtdepartment, desc, job, jobtask, null);
        }
        
        /// <remarks/>
        public void FncreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, int priorityLevel, int requisitionProductGroup, string itemcategory, string txtdirectorate, string txtdepartment, string desc, string job, string jobtask, object userState) {
            if ((this.FncreatePurchaseRequisitionOperationCompleted == null)) {
                this.FncreatePurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFncreatePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("FncreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        priorityLevel,
                        requisitionProductGroup,
                        itemcategory,
                        txtdirectorate,
                        txtdepartment,
                        desc,
                        job,
                        jobtask}, this.FncreatePurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnFncreatePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.FncreatePurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FncreatePurchaseRequisitionCompleted(this, new FncreatePurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FncreateRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FncreateRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FncreateRequisitionLine(string requisitionNo, int ppitemNo, int quantity, string uom, decimal unitcost, string technical) {
            object[] results = this.Invoke("FncreateRequisitionLine", new object[] {
                        requisitionNo,
                        ppitemNo,
                        quantity,
                        uom,
                        unitcost,
                        technical});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FncreateRequisitionLineAsync(string requisitionNo, int ppitemNo, int quantity, string uom, decimal unitcost, string technical) {
            this.FncreateRequisitionLineAsync(requisitionNo, ppitemNo, quantity, uom, unitcost, technical, null);
        }
        
        /// <remarks/>
        public void FncreateRequisitionLineAsync(string requisitionNo, int ppitemNo, int quantity, string uom, decimal unitcost, string technical, object userState) {
            if ((this.FncreateRequisitionLineOperationCompleted == null)) {
                this.FncreateRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFncreateRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("FncreateRequisitionLine", new object[] {
                        requisitionNo,
                        ppitemNo,
                        quantity,
                        uom,
                        unitcost,
                        technical}, this.FncreateRequisitionLineOperationCompleted, userState);
        }
        
        private void OnFncreateRequisitionLineOperationCompleted(object arg) {
            if ((this.FncreateRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FncreateRequisitionLineCompleted(this, new FncreateRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            this.ChangePasswordAsync(employeeNo, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRequisitionLine(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            object[] results = this.Invoke("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            this.DeleteRequisitionLineAsync(employeeNo, requisitionNo, lineNo, documentType, null);
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType, object userState) {
            if ((this.DeleteRequisitionLineOperationCompleted == null)) {
                this.DeleteRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType}, this.DeleteRequisitionLineOperationCompleted, userState);
        }
        
        private void OnDeleteRequisitionLineOperationCompleted(object arg) {
            if ((this.DeleteRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequisitionLineCompleted(this, new DeleteRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPurchaseRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.SendPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPurchaseRequisitionApprovalCompleted(this, new SendPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelPurchaseReqApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelPurchaseReqApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelPurchaseReqApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("CancelPurchaseReqApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPurchaseReqApprovalAsync(string employeeNo, string recordNo) {
            this.CancelPurchaseReqApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void CancelPurchaseReqApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.CancelPurchaseReqApprovalOperationCompleted == null)) {
                this.CancelPurchaseReqApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPurchaseReqApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPurchaseReqApproval", new object[] {
                        employeeNo,
                        recordNo}, this.CancelPurchaseReqApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPurchaseReqApprovalOperationCompleted(object arg) {
            if ((this.CancelPurchaseReqApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPurchaseReqApprovalCompleted(this, new CancelPurchaseReqApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGeneratePurchaseReqReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGeneratePurchaseReqReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePurchaseReqReport(string docNo) {
            object[] results = this.Invoke("FnGeneratePurchaseReqReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePurchaseReqReportAsync(string docNo) {
            this.FnGeneratePurchaseReqReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGeneratePurchaseReqReportAsync(string docNo, object userState) {
            if ((this.FnGeneratePurchaseReqReportOperationCompleted == null)) {
                this.FnGeneratePurchaseReqReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePurchaseReqReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePurchaseReqReport", new object[] {
                        docNo}, this.FnGeneratePurchaseReqReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratePurchaseReqReportOperationCompleted(object arg) {
            if ((this.FnGeneratePurchaseReqReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePurchaseReqReportCompleted(this, new FnGeneratePurchaseReqReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateStoreReqReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateStoreReqReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateStoreReqReport(string docNo) {
            object[] results = this.Invoke("FnGenerateStoreReqReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateStoreReqReportAsync(string docNo) {
            this.FnGenerateStoreReqReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateStoreReqReportAsync(string docNo, object userState) {
            if ((this.FnGenerateStoreReqReportOperationCompleted == null)) {
                this.FnGenerateStoreReqReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateStoreReqReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateStoreReqReport", new object[] {
                        docNo}, this.FnGenerateStoreReqReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateStoreReqReportOperationCompleted(object arg) {
            if ((this.FnGenerateStoreReqReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateStoreReqReportCompleted(this, new FnGenerateStoreReqReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStoreRequisition(string employeeNo, string requisitionNo, string txtdirectorate, string txtdepartment, string itemcategory, string desc, string job, string jobtask) {
            object[] results = this.Invoke("CreateStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        txtdirectorate,
                        txtdepartment,
                        itemcategory,
                        desc,
                        job,
                        jobtask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionAsync(string employeeNo, string requisitionNo, string txtdirectorate, string txtdepartment, string itemcategory, string desc, string job, string jobtask) {
            this.CreateStoreRequisitionAsync(employeeNo, requisitionNo, txtdirectorate, txtdepartment, itemcategory, desc, job, jobtask, null);
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionAsync(string employeeNo, string requisitionNo, string txtdirectorate, string txtdepartment, string itemcategory, string desc, string job, string jobtask, object userState) {
            if ((this.CreateStoreRequisitionOperationCompleted == null)) {
                this.CreateStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        txtdirectorate,
                        txtdepartment,
                        itemcategory,
                        desc,
                        job,
                        jobtask}, this.CreateStoreRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateStoreRequisitionOperationCompleted(object arg) {
            if ((this.CreateStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStoreRequisitionCompleted(this, new CreateStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStoreRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStoreRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStoreRequisitionLine(string employeeNo, string requisitionNo, string uom, string itemno, decimal quantity) {
            object[] results = this.Invoke("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        uom,
                        itemno,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string uom, string itemno, decimal quantity) {
            this.CreateStoreRequisitionLineAsync(employeeNo, requisitionNo, uom, itemno, quantity, null);
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string uom, string itemno, decimal quantity, object userState) {
            if ((this.CreateStoreRequisitionLineOperationCompleted == null)) {
                this.CreateStoreRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStoreRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        uom,
                        itemno,
                        quantity}, this.CreateStoreRequisitionLineOperationCompleted, userState);
        }
        
        private void OnCreateStoreRequisitionLineOperationCompleted(object arg) {
            if ((this.CreateStoreRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStoreRequisitionLineCompleted(this, new CreateStoreRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateLeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateLeaveApplication(string leaveno, string employeeno, string leavetype, int annualleavetype, int days, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, string reliever, string phone, string email, string examdetails, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime examdate) {
            object[] results = this.Invoke("FnCreateLeaveApplication", new object[] {
                        leaveno,
                        employeeno,
                        leavetype,
                        annualleavetype,
                        days,
                        startdate,
                        reliever,
                        phone,
                        email,
                        examdetails,
                        examdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateLeaveApplicationAsync(string leaveno, string employeeno, string leavetype, int annualleavetype, int days, System.DateTime startdate, string reliever, string phone, string email, string examdetails, System.DateTime examdate) {
            this.FnCreateLeaveApplicationAsync(leaveno, employeeno, leavetype, annualleavetype, days, startdate, reliever, phone, email, examdetails, examdate, null);
        }
        
        /// <remarks/>
        public void FnCreateLeaveApplicationAsync(string leaveno, string employeeno, string leavetype, int annualleavetype, int days, System.DateTime startdate, string reliever, string phone, string email, string examdetails, System.DateTime examdate, object userState) {
            if ((this.FnCreateLeaveApplicationOperationCompleted == null)) {
                this.FnCreateLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("FnCreateLeaveApplication", new object[] {
                        leaveno,
                        employeeno,
                        leavetype,
                        annualleavetype,
                        days,
                        startdate,
                        reliever,
                        phone,
                        email,
                        examdetails,
                        examdate}, this.FnCreateLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnFnCreateLeaveApplicationOperationCompleted(object arg) {
            if ((this.FnCreateLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateLeaveApplicationCompleted(this, new FnCreateLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnValidateLeaveAttachments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnValidateLeaveAttachments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnValidateLeaveAttachments(string docNo) {
            object[] results = this.Invoke("FnValidateLeaveAttachments", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnValidateLeaveAttachmentsAsync(string docNo) {
            this.FnValidateLeaveAttachmentsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnValidateLeaveAttachmentsAsync(string docNo, object userState) {
            if ((this.FnValidateLeaveAttachmentsOperationCompleted == null)) {
                this.FnValidateLeaveAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnValidateLeaveAttachmentsOperationCompleted);
            }
            this.InvokeAsync("FnValidateLeaveAttachments", new object[] {
                        docNo}, this.FnValidateLeaveAttachmentsOperationCompleted, userState);
        }
        
        private void OnFnValidateLeaveAttachmentsOperationCompleted(object arg) {
            if ((this.FnValidateLeaveAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnValidateLeaveAttachmentsCompleted(this, new FnValidateLeaveAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendLeaveForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendLeaveForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendLeaveForApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("SendLeaveForApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendLeaveForApprovalAsync(string employeeNo, string recordNo) {
            this.SendLeaveForApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void SendLeaveForApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.SendLeaveForApprovalOperationCompleted == null)) {
                this.SendLeaveForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLeaveForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLeaveForApproval", new object[] {
                        employeeNo,
                        recordNo}, this.SendLeaveForApprovalOperationCompleted, userState);
        }
        
        private void OnSendLeaveForApprovalOperationCompleted(object arg) {
            if ((this.SendLeaveForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLeaveForApprovalCompleted(this, new SendLeaveForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CanceLeaveApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CanceLeaveApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CanceLeaveApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("CanceLeaveApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CanceLeaveApprovalAsync(string employeeNo, string recordNo) {
            this.CanceLeaveApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void CanceLeaveApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.CanceLeaveApprovalOperationCompleted == null)) {
                this.CanceLeaveApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanceLeaveApprovalOperationCompleted);
            }
            this.InvokeAsync("CanceLeaveApproval", new object[] {
                        employeeNo,
                        recordNo}, this.CanceLeaveApprovalOperationCompleted, userState);
        }
        
        private void OnCanceLeaveApprovalOperationCompleted(object arg) {
            if ((this.CanceLeaveApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanceLeaveApprovalCompleted(this, new CanceLeaveApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ImprestGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ImprestGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImprestGeneralDetails(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode) {
            object[] results = this.Invoke("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode) {
            this.ImprestGeneralDetailsAsync(employeeNo, imprestNo, subject, objective, destinationNarration, travelDate, numberOfDays, job, jobTaskNo, fundCode, null);
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, object userState) {
            if ((this.ImprestGeneralDetailsOperationCompleted == null)) {
                this.ImprestGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode}, this.ImprestGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnImprestGeneralDetailsOperationCompleted(object arg) {
            if ((this.ImprestGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestGeneralDetailsCompleted(this, new ImprestGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetImprestObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetImprestObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetImprestObjective(string imprestNo, string employeeNo) {
            object[] results = this.Invoke("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo) {
            this.GetImprestObjectiveAsync(imprestNo, employeeNo, null);
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo, object userState) {
            if ((this.GetImprestObjectiveOperationCompleted == null)) {
                this.GetImprestObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImprestObjectiveOperationCompleted);
            }
            this.InvokeAsync("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo}, this.GetImprestObjectiveOperationCompleted, userState);
        }
        
        private void OnGetImprestObjectiveOperationCompleted(object arg) {
            if ((this.GetImprestObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImprestObjectiveCompleted(this, new GetImprestObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTeamMember(string employeeNo, string imprestNo, string destinationTown, int traveltype, string voteItem, string teamMember, decimal noOfDays) {
            object[] results = this.Invoke("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        traveltype,
                        voteItem,
                        teamMember,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, int traveltype, string voteItem, string teamMember, decimal noOfDays) {
            this.AddTeamMemberAsync(employeeNo, imprestNo, destinationTown, traveltype, voteItem, teamMember, noOfDays, null);
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, int traveltype, string voteItem, string teamMember, decimal noOfDays, object userState) {
            if ((this.AddTeamMemberOperationCompleted == null)) {
                this.AddTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamMemberOperationCompleted);
            }
            this.InvokeAsync("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        traveltype,
                        voteItem,
                        teamMember,
                        noOfDays}, this.AddTeamMemberOperationCompleted, userState);
        }
        
        private void OnAddTeamMemberOperationCompleted(object arg) {
            if ((this.AddTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeamMemberCompleted(this, new AddTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            object[] results = this.Invoke("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            this.AddFuelAsync(employeeNo, imprestNo, workType, resource, mileage, null);
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, object userState) {
            if ((this.AddFuelOperationCompleted == null)) {
                this.AddFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelOperationCompleted);
            }
            this.InvokeAsync("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage}, this.AddFuelOperationCompleted, userState);
        }
        
        private void OnAddFuelOperationCompleted(object arg) {
            if ((this.AddFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelCompleted(this, new AddFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays) {
            object[] results = this.Invoke("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays) {
            this.AddCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, null);
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, object userState) {
            if ((this.AddCasualsOperationCompleted == null)) {
                this.AddCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCasualsOperationCompleted);
            }
            this.InvokeAsync("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays}, this.AddCasualsOperationCompleted, userState);
        }
        
        private void OnAddCasualsOperationCompleted(object arg) {
            if ((this.AddCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCasualsCompleted(this, new AddCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal unitCost, string teamMember) {
            object[] results = this.Invoke("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        unitCost,
                        teamMember});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal unitCost, string teamMember) {
            this.AddOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, unitCost, teamMember, null);
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal unitCost, string teamMember, object userState) {
            if ((this.AddOtherCostsOperationCompleted == null)) {
                this.AddOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherCostsOperationCompleted);
            }
            this.InvokeAsync("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        unitCost,
                        teamMember}, this.AddOtherCostsOperationCompleted, userState);
        }
        
        private void OnAddOtherCostsOperationCompleted(object arg) {
            if ((this.AddOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherCostsCompleted(this, new AddOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SubmitVehicleFuelRequestDetails2" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SubmitVehicleFuelRequestDetails2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitVehicleFuelRequestDetails2(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount) {
            object[] results = this.Invoke("SubmitVehicleFuelRequestDetails2", new object[] {
                        employeeNo,
                        requisitionNumber,
                        expensetype,
                        jobnumber,
                        tasknumber,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitVehicleFuelRequestDetails2Async(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount) {
            this.SubmitVehicleFuelRequestDetails2Async(employeeNo, requisitionNumber, expensetype, jobnumber, tasknumber, amount, null);
        }
        
        /// <remarks/>
        public void SubmitVehicleFuelRequestDetails2Async(string employeeNo, string requisitionNumber, int expensetype, string jobnumber, string tasknumber, decimal amount, object userState) {
            if ((this.SubmitVehicleFuelRequestDetails2OperationCompleted == null)) {
                this.SubmitVehicleFuelRequestDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitVehicleFuelRequestDetails2OperationCompleted);
            }
            this.InvokeAsync("SubmitVehicleFuelRequestDetails2", new object[] {
                        employeeNo,
                        requisitionNumber,
                        expensetype,
                        jobnumber,
                        tasknumber,
                        amount}, this.SubmitVehicleFuelRequestDetails2OperationCompleted, userState);
        }
        
        private void OnSubmitVehicleFuelRequestDetails2OperationCompleted(object arg) {
            if ((this.SubmitVehicleFuelRequestDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitVehicleFuelRequestDetails2Completed(this, new SubmitVehicleFuelRequestDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType) {
            object[] results = this.Invoke("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType) {
            this.EditTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, originalNumber, originalWorkType, null);
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, object userState) {
            if ((this.EditTeamMemberOperationCompleted == null)) {
                this.EditTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTeamMemberOperationCompleted);
            }
            this.InvokeAsync("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType}, this.EditTeamMemberOperationCompleted, userState);
        }
        
        private void OnEditTeamMemberOperationCompleted(object arg) {
            if ((this.EditTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTeamMemberCompleted(this, new EditTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveFuelFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveFuelFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFuelFromImprestMemo(string imprestNo, int entryNumber) {
            object[] results = this.Invoke("RemoveFuelFromImprestMemo", new object[] {
                        imprestNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string imprestNo, int entryNumber) {
            this.RemoveFuelFromImprestMemoAsync(imprestNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string imprestNo, int entryNumber, object userState) {
            if ((this.RemoveFuelFromImprestMemoOperationCompleted == null)) {
                this.RemoveFuelFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFuelFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveFuelFromImprestMemo", new object[] {
                        imprestNo,
                        entryNumber}, this.RemoveFuelFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveFuelFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveFuelFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFuelFromImprestMemoCompleted(this, new RemoveFuelFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveFuelFromImprestMemo2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveFuelFromImprestMemo2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFuelFromImprestMemo2(string imprestNo, string no, string name) {
            object[] results = this.Invoke("RemoveFuelFromImprestMemo2", new object[] {
                        imprestNo,
                        no,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemo2Async(string imprestNo, string no, string name) {
            this.RemoveFuelFromImprestMemo2Async(imprestNo, no, name, null);
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemo2Async(string imprestNo, string no, string name, object userState) {
            if ((this.RemoveFuelFromImprestMemo2OperationCompleted == null)) {
                this.RemoveFuelFromImprestMemo2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFuelFromImprestMemo2OperationCompleted);
            }
            this.InvokeAsync("RemoveFuelFromImprestMemo2", new object[] {
                        imprestNo,
                        no,
                        name}, this.RemoveFuelFromImprestMemo2OperationCompleted, userState);
        }
        
        private void OnRemoveFuelFromImprestMemo2OperationCompleted(object arg) {
            if ((this.RemoveFuelFromImprestMemo2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFuelFromImprestMemo2Completed(this, new RemoveFuelFromImprestMemo2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            object[] results = this.Invoke("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            this.EditFuelAsync(employeeNo, imprestNo, workType, resource, mileage, originalNo, originalWorkType, null);
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType, object userState) {
            if ((this.EditFuelOperationCompleted == null)) {
                this.EditFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFuelOperationCompleted);
            }
            this.InvokeAsync("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType}, this.EditFuelOperationCompleted, userState);
        }
        
        private void OnEditFuelOperationCompleted(object arg) {
            if ((this.EditFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFuelCompleted(this, new EditFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveCasuals(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            object[] results = this.Invoke("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            this.RemoveCasualsAsync(employeeNo, imprestNo, resourceType, resourceNo, null);
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo, object userState) {
            if ((this.RemoveCasualsOperationCompleted == null)) {
                this.RemoveCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCasualsOperationCompleted);
            }
            this.InvokeAsync("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo}, this.RemoveCasualsOperationCompleted, userState);
        }
        
        private void OnRemoveCasualsOperationCompleted(object arg) {
            if ((this.RemoveCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCasualsCompleted(this, new RemoveCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo) {
            object[] results = this.Invoke("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo) {
            this.EditCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, originalResourceType, originalResourceNo, null);
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, object userState) {
            if ((this.EditCasualsOperationCompleted == null)) {
                this.EditCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCasualsOperationCompleted);
            }
            this.InvokeAsync("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo}, this.EditCasualsOperationCompleted, userState);
        }
        
        private void OnEditCasualsOperationCompleted(object arg) {
            if ((this.EditCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCasualsCompleted(this, new EditCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveOtherCosts(string imprestNo, string employeeNo, int lineNo) {
            object[] results = this.Invoke("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo) {
            this.RemoveOtherCostsAsync(imprestNo, employeeNo, lineNo, null);
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo, object userState) {
            if ((this.RemoveOtherCostsOperationCompleted == null)) {
                this.RemoveOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOtherCostsOperationCompleted);
            }
            this.InvokeAsync("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo}, this.RemoveOtherCostsOperationCompleted, userState);
        }
        
        private void OnRemoveOtherCostsOperationCompleted(object arg) {
            if ((this.RemoveOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOtherCostsCompleted(this, new RemoveOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo) {
            object[] results = this.Invoke("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo) {
            this.EditOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, originalLineNo, null);
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, object userState) {
            if ((this.EditOtherCostsOperationCompleted == null)) {
                this.EditOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOtherCostsOperationCompleted);
            }
            this.InvokeAsync("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo}, this.EditOtherCostsOperationCompleted, userState);
        }
        
        private void OnEditOtherCostsOperationCompleted(object arg) {
            if ((this.EditOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditOtherCostsCompleted(this, new EditOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestMemoApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestMemoApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestMemoApproval(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string staffClaim) {
            this.SendImprestMemoApprovalAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.SendImprestMemoApprovalOperationCompleted == null)) {
                this.SendImprestMemoApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestMemoApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        staffClaim}, this.SendImprestMemoApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestMemoApprovalOperationCompleted(object arg) {
            if ((this.SendImprestMemoApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestMemoApprovalCompleted(this, new SendImprestMemoApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveMemberFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveMemberFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveMemberFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.RemoveMemberFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.RemoveMemberFromImprestMemoOperationCompleted == null)) {
                this.RemoveMemberFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMemberFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.RemoveMemberFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveMemberFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveMemberFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMemberFromImprestMemoCompleted(this, new RemoveMemberFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestRequisitionApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("SendImprestRequisitionApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestRequisitionApprovalAsync(string employeeNo, string imprestNo) {
            this.SendImprestRequisitionApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void SendImprestRequisitionApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.SendImprestRequisitionApprovalOperationCompleted == null)) {
                this.SendImprestRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestRequisitionApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.SendImprestRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendImprestRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestRequisitionApprovalCompleted(this, new SendImprestRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateImprestSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateImprestSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateImprestSurrender(string employeeNo, string imprestNo, string surrenderNo) {
            object[] results = this.Invoke("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo) {
            this.CreateImprestSurrenderAsync(employeeNo, imprestNo, surrenderNo, null);
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, object userState) {
            if ((this.CreateImprestSurrenderOperationCompleted == null)) {
                this.CreateImprestSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateImprestSurrenderOperationCompleted);
            }
            this.InvokeAsync("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo}, this.CreateImprestSurrenderOperationCompleted, userState);
        }
        
        private void OnCreateImprestSurrenderOperationCompleted(object arg) {
            if ((this.CreateImprestSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateImprestSurrenderCompleted(this, new CreateImprestSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestSurrenderApproval(string employeeNo, string imprestSurrenderNo) {
            object[] results = this.Invoke("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo) {
            this.SendImprestSurrenderApprovalAsync(employeeNo, imprestSurrenderNo, null);
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo, object userState) {
            if ((this.SendImprestSurrenderApprovalOperationCompleted == null)) {
                this.SendImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo}, this.SendImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.SendImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestSurrenderApprovalCompleted(this, new SendImprestSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateSurrenderLine(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, decimal overexpenditure) {
            object[] results = this.Invoke("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt,
                        overexpenditure});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, decimal overexpenditure) {
            this.UpdateSurrenderLineAsync(employeeNo, imprestSurrenderNo, lineNo, amountSpent, receipt, overexpenditure, null);
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, decimal overexpenditure, object userState) {
            if ((this.UpdateSurrenderLineOperationCompleted == null)) {
                this.UpdateSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt,
                        overexpenditure}, this.UpdateSurrenderLineOperationCompleted, userState);
        }
        
        private void OnUpdateSurrenderLineOperationCompleted(object arg) {
            if ((this.UpdateSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSurrenderLineCompleted(this, new UpdateSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStaffClaimApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStaffClaimApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStaffClaimApproval(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim) {
            this.SendStaffClaimApprovalAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.SendStaffClaimApprovalOperationCompleted == null)) {
                this.SendStaffClaimApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStaffClaimApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim}, this.SendStaffClaimApprovalOperationCompleted, userState);
        }
        
        private void OnSendStaffClaimApprovalOperationCompleted(object arg) {
            if ((this.SendStaffClaimApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStaffClaimApprovalCompleted(this, new SendStaffClaimApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaim(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string budget) {
            object[] results = this.Invoke("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        budget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string budget) {
            this.CreateStaffClaimAsync(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, budget, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string budget, object userState) {
            if ((this.CreateStaffClaimOperationCompleted == null)) {
                this.CreateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        budget}, this.CreateStaffClaimOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimOperationCompleted(object arg) {
            if ((this.CreateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimCompleted(this, new CreateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStaffClaimLine(string employeeNo, string claimNo, int lineNo) {
            object[] results = this.Invoke("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo) {
            this.DeleteStaffClaimLineAsync(employeeNo, claimNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo, object userState) {
            if ((this.DeleteStaffClaimLineOperationCompleted == null)) {
                this.DeleteStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo}, this.DeleteStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnDeleteStaffClaimLineOperationCompleted(object arg) {
            if ((this.DeleteStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStaffClaimLineCompleted(this, new DeleteStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaimLine(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.CreateStaffClaimLineAsync(employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.CreateStaffClaimLineOperationCompleted == null)) {
                this.CreateStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.CreateStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimLineOperationCompleted(object arg) {
            if ((this.CreateStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimLineCompleted(this, new CreateStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditStaffClaimLine(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.EditStaffClaimLineAsync(lineNo, employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.EditStaffClaimLineOperationCompleted == null)) {
                this.EditStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.EditStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnEditStaffClaimLineOperationCompleted(object arg) {
            if ((this.EditStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditStaffClaimLineCompleted(this, new EditStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GeneratePayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GeneratePayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePayslip(string employeeNumber, System.DateTime payPeriod) {
            object[] results = this.Invoke("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod) {
            this.GeneratePayslipAsync(employeeNumber, payPeriod, null);
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod, object userState) {
            if ((this.GeneratePayslipOperationCompleted == null)) {
                this.GeneratePayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePayslipOperationCompleted);
            }
            this.InvokeAsync("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod}, this.GeneratePayslipOperationCompleted, userState);
        }
        
        private void OnGeneratePayslipOperationCompleted(object arg) {
            if ((this.GeneratePayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePayslipCompleted(this, new GeneratePayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateP9", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateP9_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateP9(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateP9Async(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateP9OperationCompleted == null)) {
                this.GenerateP9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateP9OperationCompleted);
            }
            this.InvokeAsync("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.GenerateP9OperationCompleted, userState);
        }
        
        private void OnGenerateP9OperationCompleted(object arg) {
            if ((this.GenerateP9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateP9Completed(this, new GenerateP9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Addemployeepassportphoto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Addemployeepassportphoto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Addemployeepassportphoto(string employeeno, string photo) {
            object[] results = this.Invoke("Addemployeepassportphoto", new object[] {
                        employeeno,
                        photo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddemployeepassportphotoAsync(string employeeno, string photo) {
            this.AddemployeepassportphotoAsync(employeeno, photo, null);
        }
        
        /// <remarks/>
        public void AddemployeepassportphotoAsync(string employeeno, string photo, object userState) {
            if ((this.AddemployeepassportphotoOperationCompleted == null)) {
                this.AddemployeepassportphotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddemployeepassportphotoOperationCompleted);
            }
            this.InvokeAsync("Addemployeepassportphoto", new object[] {
                        employeeno,
                        photo}, this.AddemployeepassportphotoOperationCompleted, userState);
        }
        
        private void OnAddemployeepassportphotoOperationCompleted(object arg) {
            if ((this.AddemployeepassportphotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddemployeepassportphotoCompleted(this, new AddemployeepassportphotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveStaffFromTravelRequisition" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveStaffFromTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveStaffFromTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveStaffFromTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveStaffFromTravelRequisitionOperationCompleted == null)) {
                this.RemoveStaffFromTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStaffFromTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveStaffFromTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveStaffFromTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveStaffFromTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveStaffFromTravelRequisitionCompleted(this, new RemoveStaffFromTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateFleetRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateFleetRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateFleetRequisition(string employeeNo, string requisitionNo, string from, string destination, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, int travelType, decimal hourstrip, int requisitiontype) {
            object[] results = this.Invoke("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        travelType,
                        hourstrip,
                        requisitiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, int travelType, decimal hourstrip, int requisitiontype) {
            this.CreateFleetRequisitionAsync(employeeNo, requisitionNo, from, destination, dateOfTrip, timeOut, journeyRoute, noOfDaysRequested, purposeOfTrip, comments, imprest, travelType, hourstrip, requisitiontype, null);
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, int travelType, decimal hourstrip, int requisitiontype, object userState) {
            if ((this.CreateFleetRequisitionOperationCompleted == null)) {
                this.CreateFleetRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFleetRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        travelType,
                        hourstrip,
                        requisitiontype}, this.CreateFleetRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateFleetRequisitionOperationCompleted(object arg) {
            if ((this.CreateFleetRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFleetRequisitionCompleted(this, new CreateFleetRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionStaff(string employeeNo, string requisitionNo, string staffNo) {
            object[] results = this.Invoke("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo) {
            this.AddFleetRequisitionStaffAsync(employeeNo, requisitionNo, staffNo, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo, object userState) {
            if ((this.AddFleetRequisitionStaffOperationCompleted == null)) {
                this.AddFleetRequisitionStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo}, this.AddFleetRequisitionStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionStaffCompleted(this, new AddFleetRequisitionStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitioNonStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitioNonStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitioNonStaff(string employeeNo, string requisitionNo, int idnumber, int phonenumber, string organizationame, string fullname) {
            object[] results = this.Invoke("AddFleetRequisitioNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idnumber,
                        phonenumber,
                        organizationame,
                        fullname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitioNonStaffAsync(string employeeNo, string requisitionNo, int idnumber, int phonenumber, string organizationame, string fullname) {
            this.AddFleetRequisitioNonStaffAsync(employeeNo, requisitionNo, idnumber, phonenumber, organizationame, fullname, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitioNonStaffAsync(string employeeNo, string requisitionNo, int idnumber, int phonenumber, string organizationame, string fullname, object userState) {
            if ((this.AddFleetRequisitioNonStaffOperationCompleted == null)) {
                this.AddFleetRequisitioNonStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitioNonStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitioNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idnumber,
                        phonenumber,
                        organizationame,
                        fullname}, this.AddFleetRequisitioNonStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitioNonStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitioNonStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitioNonStaffCompleted(this, new AddFleetRequisitioNonStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitioLoadItems", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitioLoadItems_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitioLoadItems(string employeeNo, string requisitionNo, string itemcategory, string description, decimal quantity, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returndate, string purpose, bool returnable, string serialnumber) {
            object[] results = this.Invoke("AddFleetRequisitioLoadItems", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemcategory,
                        description,
                        quantity,
                        returndate,
                        purpose,
                        returnable,
                        serialnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitioLoadItemsAsync(string employeeNo, string requisitionNo, string itemcategory, string description, decimal quantity, System.DateTime returndate, string purpose, bool returnable, string serialnumber) {
            this.AddFleetRequisitioLoadItemsAsync(employeeNo, requisitionNo, itemcategory, description, quantity, returndate, purpose, returnable, serialnumber, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitioLoadItemsAsync(string employeeNo, string requisitionNo, string itemcategory, string description, decimal quantity, System.DateTime returndate, string purpose, bool returnable, string serialnumber, object userState) {
            if ((this.AddFleetRequisitioLoadItemsOperationCompleted == null)) {
                this.AddFleetRequisitioLoadItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitioLoadItemsOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitioLoadItems", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemcategory,
                        description,
                        quantity,
                        returndate,
                        purpose,
                        returnable,
                        serialnumber}, this.AddFleetRequisitioLoadItemsOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitioLoadItemsOperationCompleted(object arg) {
            if ((this.AddFleetRequisitioLoadItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitioLoadItemsCompleted(this, new AddFleetRequisitioLoadItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendFleetRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendFleetRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendFleetRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendFleetRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendFleetRequisitionApprovalOperationCompleted == null)) {
                this.SendFleetRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFleetRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendFleetRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendFleetRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendFleetRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFleetRequisitionApprovalCompleted(this, new SendFleetRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveLoadItemsTravelRequisition" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveLoadItemsTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveLoadItemsTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveLoadItemsTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveLoadItemsTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveLoadItemsTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveLoadItemsTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveLoadItemsTravelRequisitionOperationCompleted == null)) {
                this.RemoveLoadItemsTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLoadItemsTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveLoadItemsTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveLoadItemsTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveLoadItemsTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveLoadItemsTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLoadItemsTravelRequisitionCompleted(this, new RemoveLoadItemsTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveNonStaffTravelRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveNonStaffTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveNonStaffTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveNonStaffTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNonStaffTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveNonStaffTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveNonStaffTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveNonStaffTravelRequisitionOperationCompleted == null)) {
                this.RemoveNonStaffTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNonStaffTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveNonStaffTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveNonStaffTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveNonStaffTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveNonStaffTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNonStaffTravelRequisitionCompleted(this, new RemoveNonStaffTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveFuelDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveFuelDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFuelDetails(string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveFuelDetails", new object[] {
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFuelDetailsAsync(string requisitionNo, int entryNo) {
            this.RemoveFuelDetailsAsync(requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveFuelDetailsAsync(string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveFuelDetailsOperationCompleted == null)) {
                this.RemoveFuelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFuelDetailsOperationCompleted);
            }
            this.InvokeAsync("RemoveFuelDetails", new object[] {
                        requisitionNo,
                        entryNo}, this.RemoveFuelDetailsOperationCompleted, userState);
        }
        
        private void OnRemoveFuelDetailsOperationCompleted(object arg) {
            if ((this.RemoveFuelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFuelDetailsCompleted(this, new RemoveFuelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateCSPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateCSPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateCSPReport(string docNo) {
            object[] results = this.Invoke("FnGenerateCSPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string docNo) {
            this.FnGenerateCSPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string docNo, object userState) {
            if ((this.FnGenerateCSPReportOperationCompleted == null)) {
                this.FnGenerateCSPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateCSPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateCSPReport", new object[] {
                        docNo}, this.FnGenerateCSPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateCSPReportOperationCompleted(object arg) {
            if ((this.FnGenerateCSPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateCSPReportCompleted(this, new FnGenerateCSPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateAWPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateAWPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateAWPReport(string docNo) {
            object[] results = this.Invoke("FnGenerateAWPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateAWPReportAsync(string docNo) {
            this.FnGenerateAWPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateAWPReportAsync(string docNo, object userState) {
            if ((this.FnGenerateAWPReportOperationCompleted == null)) {
                this.FnGenerateAWPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateAWPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateAWPReport", new object[] {
                        docNo}, this.FnGenerateAWPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateAWPReportOperationCompleted(object arg) {
            if ((this.FnGenerateAWPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateAWPReportCompleted(this, new FnGenerateAWPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateBoardPCReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateBoardPCReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateBoardPCReport(string docNo) {
            object[] results = this.Invoke("FnGenerateBoardPCReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string docNo) {
            this.FnGenerateBoardPCReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string docNo, object userState) {
            if ((this.FnGenerateBoardPCReportOperationCompleted == null)) {
                this.FnGenerateBoardPCReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateBoardPCReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateBoardPCReport", new object[] {
                        docNo}, this.FnGenerateBoardPCReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateBoardPCReportOperationCompleted(object arg) {
            if ((this.FnGenerateBoardPCReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateBoardPCReportCompleted(this, new FnGenerateBoardPCReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStaffPerformanceContract(string contractNo, string employeeNo, string description, string seniorOfficerPC) {
            object[] results = this.Invoke("FnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC) {
            this.FnNewStaffPerformanceContractAsync(contractNo, employeeNo, description, seniorOfficerPC, null);
        }
        
        /// <remarks/>
        public void FnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC, object userState) {
            if ((this.FnNewStaffPerformanceContractOperationCompleted == null)) {
                this.FnNewStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC}, this.FnNewStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnNewStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnNewStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStaffPerformanceContractCompleted(this, new FnNewStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestJD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestJD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestJD(string workplan) {
            object[] results = this.Invoke("FnSuggestJD", new object[] {
                        workplan});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan) {
            this.FnSuggestJDAsync(workplan, null);
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan, object userState) {
            if ((this.FnSuggestJDOperationCompleted == null)) {
                this.FnSuggestJDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestJDOperationCompleted);
            }
            this.InvokeAsync("FnSuggestJD", new object[] {
                        workplan}, this.FnSuggestJDOperationCompleted, userState);
        }
        
        private void OnFnSuggestJDOperationCompleted(object arg) {
            if ((this.FnSuggestJDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestJDCompleted(this, new FnSuggestJDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedCoreInitiatives(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            this.FnSubmitSelectedCoreInitiativesAsync(strategyid, personalscorecardid, workplanNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedCoreInitiativesOperationCompleted == null)) {
                this.FnSubmitSelectedCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber}, this.FnSubmitSelectedCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedCoreInitiativesCompleted(this, new FnSubmitSelectedCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Fnsuggestsubindicators", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Fnsuggestsubindicators_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnsuggestsubindicators(string strategyid, string docNo, string initiativeNumber, string no) {
            object[] results = this.Invoke("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no) {
            this.FnsuggestsubindicatorsAsync(strategyid, docNo, initiativeNumber, no, null);
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no, object userState) {
            if ((this.FnsuggestsubindicatorsOperationCompleted == null)) {
                this.FnsuggestsubindicatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnsuggestsubindicatorsOperationCompleted);
            }
            this.InvokeAsync("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no}, this.FnsuggestsubindicatorsOperationCompleted, userState);
        }
        
        private void OnFnsuggestsubindicatorsOperationCompleted(object arg) {
            if ((this.FnsuggestsubindicatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnsuggestsubindicatorsCompleted(this, new FnsuggestsubindicatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveCoreInitiatives(string workplanNo, int entryNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, decimal agreedTarget, string comments) {
            object[] results = this.Invoke("FnSaveCoreInitiatives", new object[] {
                        workplanNo,
                        entryNumber,
                        enddate,
                        agreedTarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(string workplanNo, int entryNumber, System.DateTime enddate, decimal agreedTarget, string comments) {
            this.FnSaveCoreInitiativesAsync(workplanNo, entryNumber, enddate, agreedTarget, comments, null);
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(string workplanNo, int entryNumber, System.DateTime enddate, decimal agreedTarget, string comments, object userState) {
            if ((this.FnSaveCoreInitiativesOperationCompleted == null)) {
                this.FnSaveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSaveCoreInitiatives", new object[] {
                        workplanNo,
                        entryNumber,
                        enddate,
                        agreedTarget,
                        comments}, this.FnSaveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSaveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSaveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveCoreInitiativesCompleted(this, new FnSaveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveCoreInitiatives(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber) {
            this.FnRemoveCoreInitiativesAsync(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber, object userState) {
            if ((this.FnRemoveCoreInitiativesOperationCompleted == null)) {
                this.FnRemoveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber}, this.FnRemoveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnRemoveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnRemoveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveCoreInitiativesCompleted(this, new FnRemoveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveAditionalInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveAditionalInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAditionalInitiatives(int entryno, decimal agreedtarget, decimal annualtarget, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, string comments) {
            object[] results = this.Invoke("FnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments) {
            this.FnSaveAditionalInitiativesAsync(entryno, agreedtarget, annualtarget, startdate, enddate, comments, null);
        }
        
        /// <remarks/>
        public void FnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments, object userState) {
            if ((this.FnSaveAditionalInitiativesOperationCompleted == null)) {
                this.FnSaveAditionalInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAditionalInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments}, this.FnSaveAditionalInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSaveAditionalInitiativesOperationCompleted(object arg) {
            if ((this.FnSaveAditionalInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAditionalInitiativesCompleted(this, new FnSaveAditionalInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveAditionalInitiative", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveAditionalInitiative_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveAditionalInitiative(string docNo, int entryno) {
            object[] results = this.Invoke("FnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveAditionalInitiativeAsync(string docNo, int entryno) {
            this.FnRemoveAditionalInitiativeAsync(docNo, entryno, null);
        }
        
        /// <remarks/>
        public void FnRemoveAditionalInitiativeAsync(string docNo, int entryno, object userState) {
            if ((this.FnRemoveAditionalInitiativeOperationCompleted == null)) {
                this.FnRemoveAditionalInitiativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveAditionalInitiativeOperationCompleted);
            }
            this.InvokeAsync("FnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno}, this.FnRemoveAditionalInitiativeOperationCompleted, userState);
        }
        
        private void OnFnRemoveAditionalInitiativeOperationCompleted(object arg) {
            if ((this.FnRemoveAditionalInitiativeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveAditionalInitiativeCompleted(this, new FnRemoveAditionalInitiativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteIndividualCardSubActivit" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIndividualCardSubActivities(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            object[] results = this.Invoke("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            this.FnDeleteIndividualCardSubActivitiesAsync(empNo, scorecardNumber, activityNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber, object userState) {
            if ((this.FnDeleteIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnDeleteIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber}, this.FnDeleteIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIndividualCardSubActivitiesCompleted(this, new FnDeleteIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewIndividualCardSubActivities" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualCardSubActivities(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal assweight) {
            object[] results = this.Invoke("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight) {
            this.FnNewIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, subindicator, uom, targets, completiondate, assweight, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight, object userState) {
            if ((this.FnNewIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnNewIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight}, this.FnNewIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnNewIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualCardSubActivitiesCompleted(this, new FnNewIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditIndividualCardSubActivitie" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditIndividualCardSubActivities(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal agreedweight) {
            object[] results = this.Invoke("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight) {
            this.FnEditIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, lineno, subinitiative, subindicator, uom, targets, completiondate, agreedweight, null);
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight, object userState) {
            if ((this.FnEditIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnEditIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight}, this.FnEditIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnEditIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnEditIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditIndividualCardSubActivitiesCompleted(this, new FnEditIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendStaffPerformanceContractAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendStaffPerformanceContractApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendStaffPerformanceContractApproval(string contractNo) {
            object[] results = this.Invoke("FnSendStaffPerformanceContractApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendStaffPerformanceContractApprovalAsync(string contractNo) {
            this.FnSendStaffPerformanceContractApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSendStaffPerformanceContractApprovalAsync(string contractNo, object userState) {
            if ((this.FnSendStaffPerformanceContractApprovalOperationCompleted == null)) {
                this.FnSendStaffPerformanceContractApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendStaffPerformanceContractApprovalOperationCompleted);
            }
            this.InvokeAsync("FnSendStaffPerformanceContractApproval", new object[] {
                        contractNo}, this.FnSendStaffPerformanceContractApprovalOperationCompleted, userState);
        }
        
        private void OnFnSendStaffPerformanceContractApprovalOperationCompleted(object arg) {
            if ((this.FnSendStaffPerformanceContractApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendStaffPerformanceContractApprovalCompleted(this, new FnSendStaffPerformanceContractApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelStaffPerformanceContract" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnCancelStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelStaffPerformanceContractAsync(string contractNo) {
            this.FnCancelStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnCancelStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnCancelStaffPerformanceContractOperationCompleted == null)) {
                this.FnCancelStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnCancelStaffPerformanceContract", new object[] {
                        contractNo}, this.FnCancelStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnCancelStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnCancelStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelStaffPerformanceContractCompleted(this, new FnCancelStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLockStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLockStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLockStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnLockStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string contractNo) {
            this.FnLockStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnLockStaffPerformanceContractOperationCompleted == null)) {
                this.FnLockStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLockStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnLockStaffPerformanceContract", new object[] {
                        contractNo}, this.FnLockStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnLockStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnLockStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLockStaffPerformanceContractCompleted(this, new FnLockStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSignStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSignStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSignStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnSignStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string contractNo) {
            this.FnSignStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnSignStaffPerformanceContractOperationCompleted == null)) {
                this.FnSignStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSignStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnSignStaffPerformanceContract", new object[] {
                        contractNo}, this.FnSignStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnSignStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnSignStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSignStaffPerformanceContractCompleted(this, new FnSignStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetAnnualWorkplanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetAnnualWorkplanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAnnualWorkplanLines(string csp, string annualcode) {
            object[] results = this.Invoke("FnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAnnualWorkplanLinesAsync(string csp, string annualcode) {
            this.FnGetAnnualWorkplanLinesAsync(csp, annualcode, null);
        }
        
        /// <remarks/>
        public void FnGetAnnualWorkplanLinesAsync(string csp, string annualcode, object userState) {
            if ((this.FnGetAnnualWorkplanLinesOperationCompleted == null)) {
                this.FnGetAnnualWorkplanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAnnualWorkplanLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode}, this.FnGetAnnualWorkplanLinesOperationCompleted, userState);
        }
        
        private void OnFnGetAnnualWorkplanLinesOperationCompleted(object arg) {
            if ((this.FnGetAnnualWorkplanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAnnualWorkplanLinesCompleted(this, new FnGetAnnualWorkplanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertSelectedAdditionalActivi" +
            "ties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertSelectedAdditionalActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSelectedAdditionalActivities(string csp, string annualcode, string personalPc, string activityID) {
            object[] results = this.Invoke("FnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID) {
            this.FnInsertSelectedAdditionalActivitiesAsync(csp, annualcode, personalPc, activityID, null);
        }
        
        /// <remarks/>
        public void FnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID, object userState) {
            if ((this.FnInsertSelectedAdditionalActivitiesOperationCompleted == null)) {
                this.FnInsertSelectedAdditionalActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSelectedAdditionalActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID}, this.FnInsertSelectedAdditionalActivitiesOperationCompleted, userState);
        }
        
        private void OnFnInsertSelectedAdditionalActivitiesOperationCompleted(object arg) {
            if ((this.FnInsertSelectedAdditionalActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSelectedAdditionalActivitiesCompleted(this, new FnInsertSelectedAdditionalActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateIndividualPcReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateIndividualPcReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateIndividualPcReport(string docNo) {
            object[] results = this.Invoke("FnGenerateIndividualPcReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcReportAsync(string docNo) {
            this.FnGenerateIndividualPcReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcReportAsync(string docNo, object userState) {
            if ((this.FnGenerateIndividualPcReportOperationCompleted == null)) {
                this.FnGenerateIndividualPcReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateIndividualPcReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateIndividualPcReport", new object[] {
                        docNo}, this.FnGenerateIndividualPcReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateIndividualPcReportOperationCompleted(object arg) {
            if ((this.FnGenerateIndividualPcReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateIndividualPcReportCompleted(this, new FnGenerateIndividualPcReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateIndividualPcSubIndicat" +
            "orReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateIndividualPcSubIndicatorReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateIndividualPcSubIndicatorReport(string docNo) {
            object[] results = this.Invoke("FnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcSubIndicatorReportAsync(string docNo) {
            this.FnGenerateIndividualPcSubIndicatorReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcSubIndicatorReportAsync(string docNo, object userState) {
            if ((this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted == null)) {
                this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateIndividualPcSubIndicatorReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo}, this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateIndividualPcSubIndicatorReportOperationCompleted(object arg) {
            if ((this.FnGenerateIndividualPcSubIndicatorReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateIndividualPcSubIndicatorReportCompleted(this, new FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertJDTargets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertJDTargets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertJDTargets(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            object[] results = this.Invoke("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            this.FnInsertJDTargetsAsync(lineno, workplanno, annualtarget, assignedtarget, null);
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget, object userState) {
            if ((this.FnInsertJDTargetsOperationCompleted == null)) {
                this.FnInsertJDTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertJDTargetsOperationCompleted);
            }
            this.InvokeAsync("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget}, this.FnInsertJDTargetsOperationCompleted, userState);
        }
        
        private void OnFnInsertJDTargetsOperationCompleted(object arg) {
            if ((this.FnInsertJDTargetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertJDTargetsCompleted(this, new FnInsertJDTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewPerformanceLogEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewPerformanceLogEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPerformanceLogEntry(string docNo, string empNo, string scorecardNumber, string description, int plogtype) {
            object[] results = this.Invoke("FnNewPerformanceLogEntry", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description,
                        plogtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string docNo, string empNo, string scorecardNumber, string description, int plogtype) {
            this.FnNewPerformanceLogEntryAsync(docNo, empNo, scorecardNumber, description, plogtype, null);
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string docNo, string empNo, string scorecardNumber, string description, int plogtype, object userState) {
            if ((this.FnNewPerformanceLogEntryOperationCompleted == null)) {
                this.FnNewPerformanceLogEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPerformanceLogEntryOperationCompleted);
            }
            this.InvokeAsync("FnNewPerformanceLogEntry", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description,
                        plogtype}, this.FnNewPerformanceLogEntryOperationCompleted, userState);
        }
        
        private void OnFnNewPerformanceLogEntryOperationCompleted(object arg) {
            if ((this.FnNewPerformanceLogEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPerformanceLogEntryCompleted(this, new FnNewPerformanceLogEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogandSubPlogData", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogandSubPlogData_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSuggestPlogandSubPlogData(string docNo) {
            this.Invoke("FnSuggestPlogandSubPlogData", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogDataAsync(string docNo) {
            this.FnSuggestPlogandSubPlogDataAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogDataAsync(string docNo, object userState) {
            if ((this.FnSuggestPlogandSubPlogDataOperationCompleted == null)) {
                this.FnSuggestPlogandSubPlogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogandSubPlogDataOperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogandSubPlogData", new object[] {
                        docNo}, this.FnSuggestPlogandSubPlogDataOperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogandSubPlogDataOperationCompleted(object arg) {
            if ((this.FnSuggestPlogandSubPlogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogandSubPlogDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdatePerformanceTargetLinesDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdatePerformanceTargetLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePerformanceTargetLinesDetails(string docNo, int entryNumber, decimal agreedTarget, string achievedesc, string variances) {
            object[] results = this.Invoke("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        achievedesc,
                        variances});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string docNo, int entryNumber, decimal agreedTarget, string achievedesc, string variances) {
            this.FnUpdatePerformanceTargetLinesDetailsAsync(docNo, entryNumber, agreedTarget, achievedesc, variances, null);
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string docNo, int entryNumber, decimal agreedTarget, string achievedesc, string variances, object userState) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted == null)) {
                this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        achievedesc,
                        variances}, this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted(object arg) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePerformanceTargetLinesDetailsCompleted(this, new FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendPlogApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendPlogApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPlogApproval(string contractNo) {
            object[] results = this.Invoke("FnSendPlogApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPlogApprovalAsync(string contractNo) {
            this.FnSendPlogApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSendPlogApprovalAsync(string contractNo, object userState) {
            if ((this.FnSendPlogApprovalOperationCompleted == null)) {
                this.FnSendPlogApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPlogApprovalOperationCompleted);
            }
            this.InvokeAsync("FnSendPlogApproval", new object[] {
                        contractNo}, this.FnSendPlogApprovalOperationCompleted, userState);
        }
        
        private void OnFnSendPlogApprovalOperationCompleted(object arg) {
            if ((this.FnSendPlogApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPlogApprovalCompleted(this, new FnSendPlogApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelPlogApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelPlogApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelPlogApproval(string contractNo) {
            object[] results = this.Invoke("FnCancelPlogApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelPlogApprovalAsync(string contractNo) {
            this.FnCancelPlogApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnCancelPlogApprovalAsync(string contractNo, object userState) {
            if ((this.FnCancelPlogApprovalOperationCompleted == null)) {
                this.FnCancelPlogApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelPlogApprovalOperationCompleted);
            }
            this.InvokeAsync("FnCancelPlogApproval", new object[] {
                        contractNo}, this.FnCancelPlogApprovalOperationCompleted, userState);
        }
        
        private void OnFnCancelPlogApprovalOperationCompleted(object arg) {
            if ((this.FnCancelPlogApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelPlogApprovalCompleted(this, new FnCancelPlogApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertPlogSubActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertPlogSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPlogSubActivities(int entryNo, string plogno, decimal achievedtarget, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime achieveddate, string comments, string variance) {
            object[] results = this.Invoke("FnInsertPlogSubActivities", new object[] {
                        entryNo,
                        plogno,
                        achievedtarget,
                        achieveddate,
                        comments,
                        variance});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivitiesAsync(int entryNo, string plogno, decimal achievedtarget, System.DateTime achieveddate, string comments, string variance) {
            this.FnInsertPlogSubActivitiesAsync(entryNo, plogno, achievedtarget, achieveddate, comments, variance, null);
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivitiesAsync(int entryNo, string plogno, decimal achievedtarget, System.DateTime achieveddate, string comments, string variance, object userState) {
            if ((this.FnInsertPlogSubActivitiesOperationCompleted == null)) {
                this.FnInsertPlogSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPlogSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnInsertPlogSubActivities", new object[] {
                        entryNo,
                        plogno,
                        achievedtarget,
                        achieveddate,
                        comments,
                        variance}, this.FnInsertPlogSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnInsertPlogSubActivitiesOperationCompleted(object arg) {
            if ((this.FnInsertPlogSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPlogSubActivitiesCompleted(this, new FnInsertPlogSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStandardAppraisal(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            object[] results = this.Invoke("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            this.FnNewStandardAppraisalAsync(docNo, empNo, strategicPlan, pmp, tasks, supervisor, description, personalSC, null);
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC, object userState) {
            if ((this.FnNewStandardAppraisalOperationCompleted == null)) {
                this.FnNewStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC}, this.FnNewStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnNewStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnNewStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStandardAppraisalCompleted(this, new FnNewStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLoadCompetencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLoadCompetencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoadCompetencies(string docNo) {
            object[] results = this.Invoke("FnLoadCompetencies", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo) {
            this.FnLoadCompetenciesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo, object userState) {
            if ((this.FnLoadCompetenciesOperationCompleted == null)) {
                this.FnLoadCompetenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoadCompetenciesOperationCompleted);
            }
            this.InvokeAsync("FnLoadCompetencies", new object[] {
                        docNo}, this.FnLoadCompetenciesOperationCompleted, userState);
        }
        
        private void OnFnLoadCompetenciesOperationCompleted(object arg) {
            if ((this.FnLoadCompetenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoadCompetenciesCompleted(this, new FnLoadCompetenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAppraisalSuggestObjectivesOutc" +
            "omes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAppraisalSuggestObjectivesOutcomes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAppraisalSuggestObjectivesOutcomes(string docNo) {
            object[] results = this.Invoke("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo) {
            this.FnAppraisalSuggestObjectivesOutcomesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo, object userState) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted == null)) {
                this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted);
            }
            this.InvokeAsync("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo}, this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted, userState);
        }
        
        private void OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted(object arg) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppraisalSuggestObjectivesOutcomesCompleted(this, new FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddEvaluationPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddEvaluationPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddEvaluationPIP(string docNo, string category, string description) {
            object[] results = this.Invoke("FnAddEvaluationPIP", new object[] {
                        docNo,
                        category,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddEvaluationPIPAsync(string docNo, string category, string description) {
            this.FnAddEvaluationPIPAsync(docNo, category, description, null);
        }
        
        /// <remarks/>
        public void FnAddEvaluationPIPAsync(string docNo, string category, string description, object userState) {
            if ((this.FnAddEvaluationPIPOperationCompleted == null)) {
                this.FnAddEvaluationPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddEvaluationPIPOperationCompleted);
            }
            this.InvokeAsync("FnAddEvaluationPIP", new object[] {
                        docNo,
                        category,
                        description}, this.FnAddEvaluationPIPOperationCompleted, userState);
        }
        
        private void OnFnAddEvaluationPIPOperationCompleted(object arg) {
            if ((this.FnAddEvaluationPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddEvaluationPIPCompleted(this, new FnAddEvaluationPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateStandardAppraisalRepor" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateStandardAppraisalReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateStandardAppraisalReport(string docNo) {
            object[] results = this.Invoke("FnGenerateStandardAppraisalReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string docNo) {
            this.FnGenerateStandardAppraisalReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string docNo, object userState) {
            if ((this.FnGenerateStandardAppraisalReportOperationCompleted == null)) {
                this.FnGenerateStandardAppraisalReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateStandardAppraisalReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateStandardAppraisalReport", new object[] {
                        docNo}, this.FnGenerateStandardAppraisalReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateStandardAppraisalReportOperationCompleted(object arg) {
            if ((this.FnGenerateStandardAppraisalReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateStandardAppraisalReportCompleted(this, new FnGenerateStandardAppraisalReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisal(string docNo) {
            object[] results = this.Invoke("FnSubmitStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo) {
            this.FnSubmitStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo, object userState) {
            if ((this.FnSubmitStandardAppraisalOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisal", new object[] {
                        docNo}, this.FnSubmitStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalCompleted(this, new FnSubmitStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLegalAdviceCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLegalAdviceCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLegalAdviceCategories() {
            object[] results = this.Invoke("FnLegalAdviceCategories", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLegalAdviceCategoriesAsync() {
            this.FnLegalAdviceCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void FnLegalAdviceCategoriesAsync(object userState) {
            if ((this.FnLegalAdviceCategoriesOperationCompleted == null)) {
                this.FnLegalAdviceCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLegalAdviceCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnLegalAdviceCategories", new object[0], this.FnLegalAdviceCategoriesOperationCompleted, userState);
        }
        
        private void OnFnLegalAdviceCategoriesOperationCompleted(object arg) {
            if ((this.FnLegalAdviceCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLegalAdviceCategoriesCompleted(this, new FnLegalAdviceCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateLegalAdvice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateLegalAdvice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateLegalAdvice(string docNo, string empNo, string category, string description) {
            object[] results = this.Invoke("FnCreateLegalAdvice", new object[] {
                        docNo,
                        empNo,
                        category,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateLegalAdviceAsync(string docNo, string empNo, string category, string description) {
            this.FnCreateLegalAdviceAsync(docNo, empNo, category, description, null);
        }
        
        /// <remarks/>
        public void FnCreateLegalAdviceAsync(string docNo, string empNo, string category, string description, object userState) {
            if ((this.FnCreateLegalAdviceOperationCompleted == null)) {
                this.FnCreateLegalAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateLegalAdviceOperationCompleted);
            }
            this.InvokeAsync("FnCreateLegalAdvice", new object[] {
                        docNo,
                        empNo,
                        category,
                        description}, this.FnCreateLegalAdviceOperationCompleted, userState);
        }
        
        private void OnFnCreateLegalAdviceOperationCompleted(object arg) {
            if ((this.FnCreateLegalAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateLegalAdviceCompleted(this, new FnCreateLegalAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendLegalAdviceNotificationToA" +
            "pplicant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendLegalAdviceNotificationToApplicant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendLegalAdviceNotificationToApplicant(string empNo, string docNo) {
            object[] results = this.Invoke("FnSendLegalAdviceNotificationToApplicant", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendLegalAdviceNotificationToApplicantAsync(string empNo, string docNo) {
            this.FnSendLegalAdviceNotificationToApplicantAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnSendLegalAdviceNotificationToApplicantAsync(string empNo, string docNo, object userState) {
            if ((this.FnSendLegalAdviceNotificationToApplicantOperationCompleted == null)) {
                this.FnSendLegalAdviceNotificationToApplicantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendLegalAdviceNotificationToApplicantOperationCompleted);
            }
            this.InvokeAsync("FnSendLegalAdviceNotificationToApplicant", new object[] {
                        empNo,
                        docNo}, this.FnSendLegalAdviceNotificationToApplicantOperationCompleted, userState);
        }
        
        private void OnFnSendLegalAdviceNotificationToApplicantOperationCompleted(object arg) {
            if ((this.FnSendLegalAdviceNotificationToApplicantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendLegalAdviceNotificationToApplicantCompleted(this, new FnSendLegalAdviceNotificationToApplicantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendLegalAdviceNotificationToC" +
            "ue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendLegalAdviceNotificationToCue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendLegalAdviceNotificationToCue(string empNo, string docNo) {
            object[] results = this.Invoke("FnSendLegalAdviceNotificationToCue", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendLegalAdviceNotificationToCueAsync(string empNo, string docNo) {
            this.FnSendLegalAdviceNotificationToCueAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnSendLegalAdviceNotificationToCueAsync(string empNo, string docNo, object userState) {
            if ((this.FnSendLegalAdviceNotificationToCueOperationCompleted == null)) {
                this.FnSendLegalAdviceNotificationToCueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendLegalAdviceNotificationToCueOperationCompleted);
            }
            this.InvokeAsync("FnSendLegalAdviceNotificationToCue", new object[] {
                        empNo,
                        docNo}, this.FnSendLegalAdviceNotificationToCueOperationCompleted, userState);
        }
        
        private void OnFnSendLegalAdviceNotificationToCueOperationCompleted(object arg) {
            if ((this.FnSendLegalAdviceNotificationToCueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendLegalAdviceNotificationToCueCompleted(this, new FnSendLegalAdviceNotificationToCueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetOpenLegalAdvice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetOpenLegalAdvice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetOpenLegalAdvice(string empNo) {
            object[] results = this.Invoke("FngetOpenLegalAdvice", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetOpenLegalAdviceAsync(string empNo) {
            this.FngetOpenLegalAdviceAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetOpenLegalAdviceAsync(string empNo, object userState) {
            if ((this.FngetOpenLegalAdviceOperationCompleted == null)) {
                this.FngetOpenLegalAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetOpenLegalAdviceOperationCompleted);
            }
            this.InvokeAsync("FngetOpenLegalAdvice", new object[] {
                        empNo}, this.FngetOpenLegalAdviceOperationCompleted, userState);
        }
        
        private void OnFngetOpenLegalAdviceOperationCompleted(object arg) {
            if ((this.FngetOpenLegalAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetOpenLegalAdviceCompleted(this, new FngetOpenLegalAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetSubmittedLegalAdvice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetSubmittedLegalAdvice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetSubmittedLegalAdvice(string empNo) {
            object[] results = this.Invoke("FngetSubmittedLegalAdvice", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetSubmittedLegalAdviceAsync(string empNo) {
            this.FngetSubmittedLegalAdviceAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetSubmittedLegalAdviceAsync(string empNo, object userState) {
            if ((this.FngetSubmittedLegalAdviceOperationCompleted == null)) {
                this.FngetSubmittedLegalAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetSubmittedLegalAdviceOperationCompleted);
            }
            this.InvokeAsync("FngetSubmittedLegalAdvice", new object[] {
                        empNo}, this.FngetSubmittedLegalAdviceOperationCompleted, userState);
        }
        
        private void OnFngetSubmittedLegalAdviceOperationCompleted(object arg) {
            if ((this.FngetSubmittedLegalAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetSubmittedLegalAdviceCompleted(this, new FngetSubmittedLegalAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetPendingVerdictLegalAdvice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetPendingVerdictLegalAdvice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetPendingVerdictLegalAdvice(string empNo) {
            object[] results = this.Invoke("FngetPendingVerdictLegalAdvice", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetPendingVerdictLegalAdviceAsync(string empNo) {
            this.FngetPendingVerdictLegalAdviceAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetPendingVerdictLegalAdviceAsync(string empNo, object userState) {
            if ((this.FngetPendingVerdictLegalAdviceOperationCompleted == null)) {
                this.FngetPendingVerdictLegalAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetPendingVerdictLegalAdviceOperationCompleted);
            }
            this.InvokeAsync("FngetPendingVerdictLegalAdvice", new object[] {
                        empNo}, this.FngetPendingVerdictLegalAdviceOperationCompleted, userState);
        }
        
        private void OnFngetPendingVerdictLegalAdviceOperationCompleted(object arg) {
            if ((this.FngetPendingVerdictLegalAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetPendingVerdictLegalAdviceCompleted(this, new FngetPendingVerdictLegalAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCloseLegalAdvice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCloseLegalAdvice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCloseLegalAdvice(string docNo, string decision) {
            object[] results = this.Invoke("FnCloseLegalAdvice", new object[] {
                        docNo,
                        decision});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCloseLegalAdviceAsync(string docNo, string decision) {
            this.FnCloseLegalAdviceAsync(docNo, decision, null);
        }
        
        /// <remarks/>
        public void FnCloseLegalAdviceAsync(string docNo, string decision, object userState) {
            if ((this.FnCloseLegalAdviceOperationCompleted == null)) {
                this.FnCloseLegalAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCloseLegalAdviceOperationCompleted);
            }
            this.InvokeAsync("FnCloseLegalAdvice", new object[] {
                        docNo,
                        decision}, this.FnCloseLegalAdviceOperationCompleted, userState);
        }
        
        private void OnFnCloseLegalAdviceOperationCompleted(object arg) {
            if ((this.FnCloseLegalAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCloseLegalAdviceCompleted(this, new FnCloseLegalAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetClosedLegalAdvice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetClosedLegalAdvice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetClosedLegalAdvice(string empNo) {
            object[] results = this.Invoke("FngetClosedLegalAdvice", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetClosedLegalAdviceAsync(string empNo) {
            this.FngetClosedLegalAdviceAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetClosedLegalAdviceAsync(string empNo, object userState) {
            if ((this.FngetClosedLegalAdviceOperationCompleted == null)) {
                this.FngetClosedLegalAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetClosedLegalAdviceOperationCompleted);
            }
            this.InvokeAsync("FngetClosedLegalAdvice", new object[] {
                        empNo}, this.FngetClosedLegalAdviceOperationCompleted, userState);
        }
        
        private void OnFngetClosedLegalAdviceOperationCompleted(object arg) {
            if ((this.FngetClosedLegalAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetClosedLegalAdviceCompleted(this, new FngetClosedLegalAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateGiftGiven", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateGiftGiven_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateGiftGiven(string docNo, string empNo, string period, string description) {
            object[] results = this.Invoke("FnCreateGiftGiven", new object[] {
                        docNo,
                        empNo,
                        period,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateGiftGivenAsync(string docNo, string empNo, string period, string description) {
            this.FnCreateGiftGivenAsync(docNo, empNo, period, description, null);
        }
        
        /// <remarks/>
        public void FnCreateGiftGivenAsync(string docNo, string empNo, string period, string description, object userState) {
            if ((this.FnCreateGiftGivenOperationCompleted == null)) {
                this.FnCreateGiftGivenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateGiftGivenOperationCompleted);
            }
            this.InvokeAsync("FnCreateGiftGiven", new object[] {
                        docNo,
                        empNo,
                        period,
                        description}, this.FnCreateGiftGivenOperationCompleted, userState);
        }
        
        private void OnFnCreateGiftGivenOperationCompleted(object arg) {
            if ((this.FnCreateGiftGivenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateGiftGivenCompleted(this, new FnCreateGiftGivenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertGiftGivenLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertGiftGivenLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertGiftGivenLines(string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofgivinggift, string occasion, string remarks) {
            object[] results = this.Invoke("FnInsertGiftGivenLines", new object[] {
                        docNo,
                        descriptionofgift,
                        officergivengift,
                        designationofofficer,
                        nameofentity,
                        valuemarket,
                        dateofgivinggift,
                        occasion,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertGiftGivenLinesAsync(string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, System.DateTime dateofgivinggift, string occasion, string remarks) {
            this.FnInsertGiftGivenLinesAsync(docNo, descriptionofgift, officergivengift, designationofofficer, nameofentity, valuemarket, dateofgivinggift, occasion, remarks, null);
        }
        
        /// <remarks/>
        public void FnInsertGiftGivenLinesAsync(string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, System.DateTime dateofgivinggift, string occasion, string remarks, object userState) {
            if ((this.FnInsertGiftGivenLinesOperationCompleted == null)) {
                this.FnInsertGiftGivenLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertGiftGivenLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertGiftGivenLines", new object[] {
                        docNo,
                        descriptionofgift,
                        officergivengift,
                        designationofofficer,
                        nameofentity,
                        valuemarket,
                        dateofgivinggift,
                        occasion,
                        remarks}, this.FnInsertGiftGivenLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertGiftGivenLinesOperationCompleted(object arg) {
            if ((this.FnInsertGiftGivenLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertGiftGivenLinesCompleted(this, new FnInsertGiftGivenLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditGiftGivenLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditGiftGivenLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditGiftGivenLine(int lineno, string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofgivinggift, string occasion, string remarks) {
            object[] results = this.Invoke("FnEditGiftGivenLine", new object[] {
                        lineno,
                        docNo,
                        descriptionofgift,
                        officergivengift,
                        designationofofficer,
                        nameofentity,
                        valuemarket,
                        dateofgivinggift,
                        occasion,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditGiftGivenLineAsync(int lineno, string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, System.DateTime dateofgivinggift, string occasion, string remarks) {
            this.FnEditGiftGivenLineAsync(lineno, docNo, descriptionofgift, officergivengift, designationofofficer, nameofentity, valuemarket, dateofgivinggift, occasion, remarks, null);
        }
        
        /// <remarks/>
        public void FnEditGiftGivenLineAsync(int lineno, string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, System.DateTime dateofgivinggift, string occasion, string remarks, object userState) {
            if ((this.FnEditGiftGivenLineOperationCompleted == null)) {
                this.FnEditGiftGivenLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditGiftGivenLineOperationCompleted);
            }
            this.InvokeAsync("FnEditGiftGivenLine", new object[] {
                        lineno,
                        docNo,
                        descriptionofgift,
                        officergivengift,
                        designationofofficer,
                        nameofentity,
                        valuemarket,
                        dateofgivinggift,
                        occasion,
                        remarks}, this.FnEditGiftGivenLineOperationCompleted, userState);
        }
        
        private void OnFnEditGiftGivenLineOperationCompleted(object arg) {
            if ((this.FnEditGiftGivenLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditGiftGivenLineCompleted(this, new FnEditGiftGivenLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveGiftGivenLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveGiftGivenLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveGiftGivenLine(int lineno, string docNo) {
            object[] results = this.Invoke("FnRemoveGiftGivenLine", new object[] {
                        lineno,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveGiftGivenLineAsync(int lineno, string docNo) {
            this.FnRemoveGiftGivenLineAsync(lineno, docNo, null);
        }
        
        /// <remarks/>
        public void FnRemoveGiftGivenLineAsync(int lineno, string docNo, object userState) {
            if ((this.FnRemoveGiftGivenLineOperationCompleted == null)) {
                this.FnRemoveGiftGivenLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveGiftGivenLineOperationCompleted);
            }
            this.InvokeAsync("FnRemoveGiftGivenLine", new object[] {
                        lineno,
                        docNo}, this.FnRemoveGiftGivenLineOperationCompleted, userState);
        }
        
        private void OnFnRemoveGiftGivenLineOperationCompleted(object arg) {
            if ((this.FnRemoveGiftGivenLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveGiftGivenLineCompleted(this, new FnRemoveGiftGivenLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetGiftGivenLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetGiftGivenLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetGiftGivenLines(string docNo) {
            object[] results = this.Invoke("FngetGiftGivenLines", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetGiftGivenLinesAsync(string docNo) {
            this.FngetGiftGivenLinesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FngetGiftGivenLinesAsync(string docNo, object userState) {
            if ((this.FngetGiftGivenLinesOperationCompleted == null)) {
                this.FngetGiftGivenLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetGiftGivenLinesOperationCompleted);
            }
            this.InvokeAsync("FngetGiftGivenLines", new object[] {
                        docNo}, this.FngetGiftGivenLinesOperationCompleted, userState);
        }
        
        private void OnFngetGiftGivenLinesOperationCompleted(object arg) {
            if ((this.FngetGiftGivenLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetGiftGivenLinesCompleted(this, new FngetGiftGivenLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitGiftGiven", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitGiftGiven_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitGiftGiven(string docNo, string empNo) {
            object[] results = this.Invoke("FnSubmitGiftGiven", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitGiftGivenAsync(string docNo, string empNo) {
            this.FnSubmitGiftGivenAsync(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitGiftGivenAsync(string docNo, string empNo, object userState) {
            if ((this.FnSubmitGiftGivenOperationCompleted == null)) {
                this.FnSubmitGiftGivenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitGiftGivenOperationCompleted);
            }
            this.InvokeAsync("FnSubmitGiftGiven", new object[] {
                        docNo,
                        empNo}, this.FnSubmitGiftGivenOperationCompleted, userState);
        }
        
        private void OnFnSubmitGiftGivenOperationCompleted(object arg) {
            if ((this.FnSubmitGiftGivenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitGiftGivenCompleted(this, new FnSubmitGiftGivenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendGiftGivenNotificationToApp" +
            "licant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendGiftGivenNotificationToApplicant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendGiftGivenNotificationToApplicant(string empNo, string docNo) {
            object[] results = this.Invoke("FnSendGiftGivenNotificationToApplicant", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendGiftGivenNotificationToApplicantAsync(string empNo, string docNo) {
            this.FnSendGiftGivenNotificationToApplicantAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnSendGiftGivenNotificationToApplicantAsync(string empNo, string docNo, object userState) {
            if ((this.FnSendGiftGivenNotificationToApplicantOperationCompleted == null)) {
                this.FnSendGiftGivenNotificationToApplicantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendGiftGivenNotificationToApplicantOperationCompleted);
            }
            this.InvokeAsync("FnSendGiftGivenNotificationToApplicant", new object[] {
                        empNo,
                        docNo}, this.FnSendGiftGivenNotificationToApplicantOperationCompleted, userState);
        }
        
        private void OnFnSendGiftGivenNotificationToApplicantOperationCompleted(object arg) {
            if ((this.FnSendGiftGivenNotificationToApplicantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendGiftGivenNotificationToApplicantCompleted(this, new FnSendGiftGivenNotificationToApplicantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendGiftGivenNotificationToCue" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendGiftGivenNotificationToCue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendGiftGivenNotificationToCue(string empNo, string docNo) {
            object[] results = this.Invoke("FnSendGiftGivenNotificationToCue", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendGiftGivenNotificationToCueAsync(string empNo, string docNo) {
            this.FnSendGiftGivenNotificationToCueAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnSendGiftGivenNotificationToCueAsync(string empNo, string docNo, object userState) {
            if ((this.FnSendGiftGivenNotificationToCueOperationCompleted == null)) {
                this.FnSendGiftGivenNotificationToCueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendGiftGivenNotificationToCueOperationCompleted);
            }
            this.InvokeAsync("FnSendGiftGivenNotificationToCue", new object[] {
                        empNo,
                        docNo}, this.FnSendGiftGivenNotificationToCueOperationCompleted, userState);
        }
        
        private void OnFnSendGiftGivenNotificationToCueOperationCompleted(object arg) {
            if ((this.FnSendGiftGivenNotificationToCueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendGiftGivenNotificationToCueCompleted(this, new FnSendGiftGivenNotificationToCueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetOpenGiftGiven", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetOpenGiftGiven_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetOpenGiftGiven(string empNo) {
            object[] results = this.Invoke("FngetOpenGiftGiven", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetOpenGiftGivenAsync(string empNo) {
            this.FngetOpenGiftGivenAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetOpenGiftGivenAsync(string empNo, object userState) {
            if ((this.FngetOpenGiftGivenOperationCompleted == null)) {
                this.FngetOpenGiftGivenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetOpenGiftGivenOperationCompleted);
            }
            this.InvokeAsync("FngetOpenGiftGiven", new object[] {
                        empNo}, this.FngetOpenGiftGivenOperationCompleted, userState);
        }
        
        private void OnFngetOpenGiftGivenOperationCompleted(object arg) {
            if ((this.FngetOpenGiftGivenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetOpenGiftGivenCompleted(this, new FngetOpenGiftGivenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetSubmittedGiftGiven", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetSubmittedGiftGiven_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetSubmittedGiftGiven(string empNo) {
            object[] results = this.Invoke("FngetSubmittedGiftGiven", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetSubmittedGiftGivenAsync(string empNo) {
            this.FngetSubmittedGiftGivenAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetSubmittedGiftGivenAsync(string empNo, object userState) {
            if ((this.FngetSubmittedGiftGivenOperationCompleted == null)) {
                this.FngetSubmittedGiftGivenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetSubmittedGiftGivenOperationCompleted);
            }
            this.InvokeAsync("FngetSubmittedGiftGiven", new object[] {
                        empNo}, this.FngetSubmittedGiftGivenOperationCompleted, userState);
        }
        
        private void OnFngetSubmittedGiftGivenOperationCompleted(object arg) {
            if ((this.FngetSubmittedGiftGivenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetSubmittedGiftGivenCompleted(this, new FngetSubmittedGiftGivenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateGiftReceived", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateGiftReceived_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateGiftReceived(string docNo, string empNo, string period, string description) {
            object[] results = this.Invoke("FnCreateGiftReceived", new object[] {
                        docNo,
                        empNo,
                        period,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateGiftReceivedAsync(string docNo, string empNo, string period, string description) {
            this.FnCreateGiftReceivedAsync(docNo, empNo, period, description, null);
        }
        
        /// <remarks/>
        public void FnCreateGiftReceivedAsync(string docNo, string empNo, string period, string description, object userState) {
            if ((this.FnCreateGiftReceivedOperationCompleted == null)) {
                this.FnCreateGiftReceivedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateGiftReceivedOperationCompleted);
            }
            this.InvokeAsync("FnCreateGiftReceived", new object[] {
                        docNo,
                        empNo,
                        period,
                        description}, this.FnCreateGiftReceivedOperationCompleted, userState);
        }
        
        private void OnFnCreateGiftReceivedOperationCompleted(object arg) {
            if ((this.FnCreateGiftReceivedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateGiftReceivedCompleted(this, new FnCreateGiftReceivedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertGiftReceivedLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertGiftReceivedLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertGiftReceivedLines(string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofgivinggift, string occasion, string remarks) {
            object[] results = this.Invoke("FnInsertGiftReceivedLines", new object[] {
                        docNo,
                        descriptionofgift,
                        officergivengift,
                        designationofofficer,
                        nameofentity,
                        valuemarket,
                        dateofgivinggift,
                        occasion,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertGiftReceivedLinesAsync(string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, System.DateTime dateofgivinggift, string occasion, string remarks) {
            this.FnInsertGiftReceivedLinesAsync(docNo, descriptionofgift, officergivengift, designationofofficer, nameofentity, valuemarket, dateofgivinggift, occasion, remarks, null);
        }
        
        /// <remarks/>
        public void FnInsertGiftReceivedLinesAsync(string docNo, string descriptionofgift, string officergivengift, string designationofofficer, string nameofentity, decimal valuemarket, System.DateTime dateofgivinggift, string occasion, string remarks, object userState) {
            if ((this.FnInsertGiftReceivedLinesOperationCompleted == null)) {
                this.FnInsertGiftReceivedLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertGiftReceivedLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertGiftReceivedLines", new object[] {
                        docNo,
                        descriptionofgift,
                        officergivengift,
                        designationofofficer,
                        nameofentity,
                        valuemarket,
                        dateofgivinggift,
                        occasion,
                        remarks}, this.FnInsertGiftReceivedLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertGiftReceivedLinesOperationCompleted(object arg) {
            if ((this.FnInsertGiftReceivedLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertGiftReceivedLinesCompleted(this, new FnInsertGiftReceivedLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetOpenGiftReceived", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetOpenGiftReceived_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetOpenGiftReceived(string empNo) {
            object[] results = this.Invoke("FngetOpenGiftReceived", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetOpenGiftReceivedAsync(string empNo) {
            this.FngetOpenGiftReceivedAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetOpenGiftReceivedAsync(string empNo, object userState) {
            if ((this.FngetOpenGiftReceivedOperationCompleted == null)) {
                this.FngetOpenGiftReceivedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetOpenGiftReceivedOperationCompleted);
            }
            this.InvokeAsync("FngetOpenGiftReceived", new object[] {
                        empNo}, this.FngetOpenGiftReceivedOperationCompleted, userState);
        }
        
        private void OnFngetOpenGiftReceivedOperationCompleted(object arg) {
            if ((this.FngetOpenGiftReceivedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetOpenGiftReceivedCompleted(this, new FngetOpenGiftReceivedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetSubmittedGiftReceived", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetSubmittedGiftReceived_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetSubmittedGiftReceived(string empNo) {
            object[] results = this.Invoke("FngetSubmittedGiftReceived", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetSubmittedGiftReceivedAsync(string empNo) {
            this.FngetSubmittedGiftReceivedAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetSubmittedGiftReceivedAsync(string empNo, object userState) {
            if ((this.FngetSubmittedGiftReceivedOperationCompleted == null)) {
                this.FngetSubmittedGiftReceivedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetSubmittedGiftReceivedOperationCompleted);
            }
            this.InvokeAsync("FngetSubmittedGiftReceived", new object[] {
                        empNo}, this.FngetSubmittedGiftReceivedOperationCompleted, userState);
        }
        
        private void OnFngetSubmittedGiftReceivedOperationCompleted(object arg) {
            if ((this.FngetSubmittedGiftReceivedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetSubmittedGiftReceivedCompleted(this, new FngetSubmittedGiftReceivedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitGiftReceived", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitGiftReceived_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitGiftReceived(string docNo, string empNo) {
            object[] results = this.Invoke("FnSubmitGiftReceived", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitGiftReceivedAsync(string docNo, string empNo) {
            this.FnSubmitGiftReceivedAsync(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitGiftReceivedAsync(string docNo, string empNo, object userState) {
            if ((this.FnSubmitGiftReceivedOperationCompleted == null)) {
                this.FnSubmitGiftReceivedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitGiftReceivedOperationCompleted);
            }
            this.InvokeAsync("FnSubmitGiftReceived", new object[] {
                        docNo,
                        empNo}, this.FnSubmitGiftReceivedOperationCompleted, userState);
        }
        
        private void OnFnSubmitGiftReceivedOperationCompleted(object arg) {
            if ((this.FnSubmitGiftReceivedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitGiftReceivedCompleted(this, new FnSubmitGiftReceivedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendGiftReceivedNotificationTo" +
            "Applicant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendGiftReceivedNotificationToApplicant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendGiftReceivedNotificationToApplicant(string empNo, string docNo) {
            object[] results = this.Invoke("FnSendGiftReceivedNotificationToApplicant", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendGiftReceivedNotificationToApplicantAsync(string empNo, string docNo) {
            this.FnSendGiftReceivedNotificationToApplicantAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnSendGiftReceivedNotificationToApplicantAsync(string empNo, string docNo, object userState) {
            if ((this.FnSendGiftReceivedNotificationToApplicantOperationCompleted == null)) {
                this.FnSendGiftReceivedNotificationToApplicantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendGiftReceivedNotificationToApplicantOperationCompleted);
            }
            this.InvokeAsync("FnSendGiftReceivedNotificationToApplicant", new object[] {
                        empNo,
                        docNo}, this.FnSendGiftReceivedNotificationToApplicantOperationCompleted, userState);
        }
        
        private void OnFnSendGiftReceivedNotificationToApplicantOperationCompleted(object arg) {
            if ((this.FnSendGiftReceivedNotificationToApplicantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendGiftReceivedNotificationToApplicantCompleted(this, new FnSendGiftReceivedNotificationToApplicantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendGiftReceivedNotificationTo" +
            "Cue", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendGiftReceivedNotificationToCue_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendGiftReceivedNotificationToCue(string empNo, string docNo) {
            object[] results = this.Invoke("FnSendGiftReceivedNotificationToCue", new object[] {
                        empNo,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendGiftReceivedNotificationToCueAsync(string empNo, string docNo) {
            this.FnSendGiftReceivedNotificationToCueAsync(empNo, docNo, null);
        }
        
        /// <remarks/>
        public void FnSendGiftReceivedNotificationToCueAsync(string empNo, string docNo, object userState) {
            if ((this.FnSendGiftReceivedNotificationToCueOperationCompleted == null)) {
                this.FnSendGiftReceivedNotificationToCueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendGiftReceivedNotificationToCueOperationCompleted);
            }
            this.InvokeAsync("FnSendGiftReceivedNotificationToCue", new object[] {
                        empNo,
                        docNo}, this.FnSendGiftReceivedNotificationToCueOperationCompleted, userState);
        }
        
        private void OnFnSendGiftReceivedNotificationToCueOperationCompleted(object arg) {
            if ((this.FnSendGiftReceivedNotificationToCueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendGiftReceivedNotificationToCueCompleted(this, new FnSendGiftReceivedNotificationToCueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateConflictofInterest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateConflictofInterest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateConflictofInterest(string docNo, string empNo, string period, string description) {
            object[] results = this.Invoke("FnCreateConflictofInterest", new object[] {
                        docNo,
                        empNo,
                        period,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateConflictofInterestAsync(string docNo, string empNo, string period, string description) {
            this.FnCreateConflictofInterestAsync(docNo, empNo, period, description, null);
        }
        
        /// <remarks/>
        public void FnCreateConflictofInterestAsync(string docNo, string empNo, string period, string description, object userState) {
            if ((this.FnCreateConflictofInterestOperationCompleted == null)) {
                this.FnCreateConflictofInterestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateConflictofInterestOperationCompleted);
            }
            this.InvokeAsync("FnCreateConflictofInterest", new object[] {
                        docNo,
                        empNo,
                        period,
                        description}, this.FnCreateConflictofInterestOperationCompleted, userState);
        }
        
        private void OnFnCreateConflictofInterestOperationCompleted(object arg) {
            if ((this.FnCreateConflictofInterestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateConflictofInterestCompleted(this, new FnCreateConflictofInterestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertConflictLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertConflictLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertConflictLines(string docNo, string nature, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datenatured) {
            object[] results = this.Invoke("FnInsertConflictLines", new object[] {
                        docNo,
                        nature,
                        datenatured});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertConflictLinesAsync(string docNo, string nature, System.DateTime datenatured) {
            this.FnInsertConflictLinesAsync(docNo, nature, datenatured, null);
        }
        
        /// <remarks/>
        public void FnInsertConflictLinesAsync(string docNo, string nature, System.DateTime datenatured, object userState) {
            if ((this.FnInsertConflictLinesOperationCompleted == null)) {
                this.FnInsertConflictLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertConflictLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertConflictLines", new object[] {
                        docNo,
                        nature,
                        datenatured}, this.FnInsertConflictLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertConflictLinesOperationCompleted(object arg) {
            if ((this.FnInsertConflictLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertConflictLinesCompleted(this, new FnInsertConflictLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetOpenConflict", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetOpenConflict_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetOpenConflict(string empNo) {
            object[] results = this.Invoke("FngetOpenConflict", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetOpenConflictAsync(string empNo) {
            this.FngetOpenConflictAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetOpenConflictAsync(string empNo, object userState) {
            if ((this.FngetOpenConflictOperationCompleted == null)) {
                this.FngetOpenConflictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetOpenConflictOperationCompleted);
            }
            this.InvokeAsync("FngetOpenConflict", new object[] {
                        empNo}, this.FngetOpenConflictOperationCompleted, userState);
        }
        
        private void OnFngetOpenConflictOperationCompleted(object arg) {
            if ((this.FngetOpenConflictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetOpenConflictCompleted(this, new FngetOpenConflictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetSubmittedConflict", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetSubmittedConflict_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetSubmittedConflict(string empNo) {
            object[] results = this.Invoke("FngetSubmittedConflict", new object[] {
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetSubmittedConflictAsync(string empNo) {
            this.FngetSubmittedConflictAsync(empNo, null);
        }
        
        /// <remarks/>
        public void FngetSubmittedConflictAsync(string empNo, object userState) {
            if ((this.FngetSubmittedConflictOperationCompleted == null)) {
                this.FngetSubmittedConflictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetSubmittedConflictOperationCompleted);
            }
            this.InvokeAsync("FngetSubmittedConflict", new object[] {
                        empNo}, this.FngetSubmittedConflictOperationCompleted, userState);
        }
        
        private void OnFngetSubmittedConflictOperationCompleted(object arg) {
            if ((this.FngetSubmittedConflictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetSubmittedConflictCompleted(this, new FngetSubmittedConflictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetConflictLinesCompletedEventHandler(object sender, FngetConflictLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetConflictLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetConflictLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetSingleConflictCompletedEventHandler(object sender, FngetSingleConflictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetSingleConflictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetSingleConflictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditConflictLineCompletedEventHandler(object sender, FnEditConflictLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditConflictLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditConflictLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteConflictLineCompletedEventHandler(object sender, FnDeleteConflictLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteConflictLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteConflictLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitToCueLegalDetailsCompletedEventHandler(object sender, FnSubmitToCueLegalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitToCueLegalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitToCueLegalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveCasehearinggeneralDetailsCompletedEventHandler(object sender, FnSaveCasehearinggeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveCasehearinggeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveCasehearinggeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmithearingCompletedEventHandler(object sender, FnSubmithearingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmithearingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmithearingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveAdvocateCompletedEventHandler(object sender, FnSaveAdvocateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAdvocateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAdvocateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveSurveyOpenEndedQuestionCompletedEventHandler(object sender, FnSaveSurveyOpenEndedQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveSurveyOpenEndedQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveSurveyOpenEndedQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveSurveyClosedEndedQuestionCompletedEventHandler(object sender, FnSaveSurveyClosedEndedQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveSurveyClosedEndedQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveSurveyClosedEndedQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSurveyCompletedEventHandler(object sender, FnSubmitSurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FncreatePurchaseRequisitionCompletedEventHandler(object sender, FncreatePurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FncreatePurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FncreatePurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FncreateRequisitionLineCompletedEventHandler(object sender, FncreateRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FncreateRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FncreateRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRequisitionLineCompletedEventHandler(object sender, DeleteRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendPurchaseRequisitionApprovalCompletedEventHandler(object sender, SendPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelPurchaseReqApprovalCompletedEventHandler(object sender, CancelPurchaseReqApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPurchaseReqApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPurchaseReqApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePurchaseReqReportCompletedEventHandler(object sender, FnGeneratePurchaseReqReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePurchaseReqReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePurchaseReqReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateStoreReqReportCompletedEventHandler(object sender, FnGenerateStoreReqReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateStoreReqReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateStoreReqReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStoreRequisitionCompletedEventHandler(object sender, CreateStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStoreRequisitionLineCompletedEventHandler(object sender, CreateStoreRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStoreRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStoreRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateLeaveApplicationCompletedEventHandler(object sender, FnCreateLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnValidateLeaveAttachmentsCompletedEventHandler(object sender, FnValidateLeaveAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnValidateLeaveAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnValidateLeaveAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendLeaveForApprovalCompletedEventHandler(object sender, SendLeaveForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLeaveForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLeaveForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CanceLeaveApprovalCompletedEventHandler(object sender, CanceLeaveApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanceLeaveApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanceLeaveApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ImprestGeneralDetailsCompletedEventHandler(object sender, ImprestGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImprestGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImprestGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImprestObjectiveCompletedEventHandler(object sender, GetImprestObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImprestObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImprestObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTeamMemberCompletedEventHandler(object sender, AddTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFuelCompletedEventHandler(object sender, AddFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCasualsCompletedEventHandler(object sender, AddCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherCostsCompletedEventHandler(object sender, AddOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubmitVehicleFuelRequestDetails2CompletedEventHandler(object sender, SubmitVehicleFuelRequestDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitVehicleFuelRequestDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitVehicleFuelRequestDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditTeamMemberCompletedEventHandler(object sender, EditTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFuelFromImprestMemoCompletedEventHandler(object sender, RemoveFuelFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFuelFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFuelFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFuelFromImprestMemo2CompletedEventHandler(object sender, RemoveFuelFromImprestMemo2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFuelFromImprestMemo2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFuelFromImprestMemo2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditFuelCompletedEventHandler(object sender, EditFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveCasualsCompletedEventHandler(object sender, RemoveCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditCasualsCompletedEventHandler(object sender, EditCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveOtherCostsCompletedEventHandler(object sender, RemoveOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditOtherCostsCompletedEventHandler(object sender, EditOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendImprestMemoApprovalCompletedEventHandler(object sender, SendImprestMemoApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestMemoApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestMemoApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveMemberFromImprestMemoCompletedEventHandler(object sender, RemoveMemberFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMemberFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMemberFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendImprestRequisitionApprovalCompletedEventHandler(object sender, SendImprestRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateImprestSurrenderCompletedEventHandler(object sender, CreateImprestSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateImprestSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateImprestSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendImprestSurrenderApprovalCompletedEventHandler(object sender, SendImprestSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateSurrenderLineCompletedEventHandler(object sender, UpdateSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStaffClaimApprovalCompletedEventHandler(object sender, SendStaffClaimApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStaffClaimApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStaffClaimApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimCompletedEventHandler(object sender, CreateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStaffClaimLineCompletedEventHandler(object sender, DeleteStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimLineCompletedEventHandler(object sender, CreateStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditStaffClaimLineCompletedEventHandler(object sender, EditStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeneratePayslipCompletedEventHandler(object sender, GeneratePayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateP9CompletedEventHandler(object sender, GenerateP9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateP9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateP9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddemployeepassportphotoCompletedEventHandler(object sender, AddemployeepassportphotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddemployeepassportphotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddemployeepassportphotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveStaffFromTravelRequisitionCompletedEventHandler(object sender, RemoveStaffFromTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveStaffFromTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveStaffFromTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateFleetRequisitionCompletedEventHandler(object sender, CreateFleetRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFleetRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFleetRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitionStaffCompletedEventHandler(object sender, AddFleetRequisitionStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitioNonStaffCompletedEventHandler(object sender, AddFleetRequisitioNonStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitioNonStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitioNonStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitioLoadItemsCompletedEventHandler(object sender, AddFleetRequisitioLoadItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitioLoadItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitioLoadItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendFleetRequisitionApprovalCompletedEventHandler(object sender, SendFleetRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFleetRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFleetRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveLoadItemsTravelRequisitionCompletedEventHandler(object sender, RemoveLoadItemsTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLoadItemsTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveLoadItemsTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveNonStaffTravelRequisitionCompletedEventHandler(object sender, RemoveNonStaffTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNonStaffTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNonStaffTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFuelDetailsCompletedEventHandler(object sender, RemoveFuelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFuelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFuelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateCSPReportCompletedEventHandler(object sender, FnGenerateCSPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateCSPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateCSPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateAWPReportCompletedEventHandler(object sender, FnGenerateAWPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateAWPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateAWPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateBoardPCReportCompletedEventHandler(object sender, FnGenerateBoardPCReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateBoardPCReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateBoardPCReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewStaffPerformanceContractCompletedEventHandler(object sender, FnNewStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestJDCompletedEventHandler(object sender, FnSuggestJDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestJDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestJDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedCoreInitiativesCompletedEventHandler(object sender, FnSubmitSelectedCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnsuggestsubindicatorsCompletedEventHandler(object sender, FnsuggestsubindicatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnsuggestsubindicatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnsuggestsubindicatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveCoreInitiativesCompletedEventHandler(object sender, FnSaveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveCoreInitiativesCompletedEventHandler(object sender, FnRemoveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveAditionalInitiativesCompletedEventHandler(object sender, FnSaveAditionalInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAditionalInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAditionalInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveAditionalInitiativeCompletedEventHandler(object sender, FnRemoveAditionalInitiativeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveAditionalInitiativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveAditionalInitiativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteIndividualCardSubActivitiesCompletedEventHandler(object sender, FnDeleteIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewIndividualCardSubActivitiesCompletedEventHandler(object sender, FnNewIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditIndividualCardSubActivitiesCompletedEventHandler(object sender, FnEditIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendStaffPerformanceContractApprovalCompletedEventHandler(object sender, FnSendStaffPerformanceContractApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendStaffPerformanceContractApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendStaffPerformanceContractApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCancelStaffPerformanceContractCompletedEventHandler(object sender, FnCancelStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLockStaffPerformanceContractCompletedEventHandler(object sender, FnLockStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLockStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLockStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSignStaffPerformanceContractCompletedEventHandler(object sender, FnSignStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSignStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSignStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetAnnualWorkplanLinesCompletedEventHandler(object sender, FnGetAnnualWorkplanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAnnualWorkplanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAnnualWorkplanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertSelectedAdditionalActivitiesCompletedEventHandler(object sender, FnInsertSelectedAdditionalActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSelectedAdditionalActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSelectedAdditionalActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateIndividualPcReportCompletedEventHandler(object sender, FnGenerateIndividualPcReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateIndividualPcReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateIndividualPcReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateIndividualPcSubIndicatorReportCompletedEventHandler(object sender, FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertJDTargetsCompletedEventHandler(object sender, FnInsertJDTargetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertJDTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertJDTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPerformanceLogEntryCompletedEventHandler(object sender, FnNewPerformanceLogEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPerformanceLogEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPerformanceLogEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestPlogandSubPlogDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler(object sender, FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPlogApprovalCompletedEventHandler(object sender, FnSendPlogApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPlogApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPlogApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCancelPlogApprovalCompletedEventHandler(object sender, FnCancelPlogApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelPlogApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelPlogApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPlogSubActivitiesCompletedEventHandler(object sender, FnInsertPlogSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPlogSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPlogSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewStandardAppraisalCompletedEventHandler(object sender, FnNewStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLoadCompetenciesCompletedEventHandler(object sender, FnLoadCompetenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoadCompetenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoadCompetenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler(object sender, FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddEvaluationPIPCompletedEventHandler(object sender, FnAddEvaluationPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddEvaluationPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddEvaluationPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateStandardAppraisalReportCompletedEventHandler(object sender, FnGenerateStandardAppraisalReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateStandardAppraisalReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateStandardAppraisalReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitStandardAppraisalCompletedEventHandler(object sender, FnSubmitStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLegalAdviceCategoriesCompletedEventHandler(object sender, FnLegalAdviceCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLegalAdviceCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLegalAdviceCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateLegalAdviceCompletedEventHandler(object sender, FnCreateLegalAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateLegalAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateLegalAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendLegalAdviceNotificationToApplicantCompletedEventHandler(object sender, FnSendLegalAdviceNotificationToApplicantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendLegalAdviceNotificationToApplicantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendLegalAdviceNotificationToApplicantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendLegalAdviceNotificationToCueCompletedEventHandler(object sender, FnSendLegalAdviceNotificationToCueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendLegalAdviceNotificationToCueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendLegalAdviceNotificationToCueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetOpenLegalAdviceCompletedEventHandler(object sender, FngetOpenLegalAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetOpenLegalAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetOpenLegalAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetSubmittedLegalAdviceCompletedEventHandler(object sender, FngetSubmittedLegalAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetSubmittedLegalAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetSubmittedLegalAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetPendingVerdictLegalAdviceCompletedEventHandler(object sender, FngetPendingVerdictLegalAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetPendingVerdictLegalAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetPendingVerdictLegalAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCloseLegalAdviceCompletedEventHandler(object sender, FnCloseLegalAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCloseLegalAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCloseLegalAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetClosedLegalAdviceCompletedEventHandler(object sender, FngetClosedLegalAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetClosedLegalAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetClosedLegalAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateGiftGivenCompletedEventHandler(object sender, FnCreateGiftGivenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateGiftGivenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateGiftGivenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertGiftGivenLinesCompletedEventHandler(object sender, FnInsertGiftGivenLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertGiftGivenLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertGiftGivenLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditGiftGivenLineCompletedEventHandler(object sender, FnEditGiftGivenLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditGiftGivenLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditGiftGivenLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveGiftGivenLineCompletedEventHandler(object sender, FnRemoveGiftGivenLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveGiftGivenLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveGiftGivenLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetGiftGivenLinesCompletedEventHandler(object sender, FngetGiftGivenLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetGiftGivenLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetGiftGivenLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitGiftGivenCompletedEventHandler(object sender, FnSubmitGiftGivenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitGiftGivenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitGiftGivenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendGiftGivenNotificationToApplicantCompletedEventHandler(object sender, FnSendGiftGivenNotificationToApplicantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendGiftGivenNotificationToApplicantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendGiftGivenNotificationToApplicantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendGiftGivenNotificationToCueCompletedEventHandler(object sender, FnSendGiftGivenNotificationToCueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendGiftGivenNotificationToCueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendGiftGivenNotificationToCueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetOpenGiftGivenCompletedEventHandler(object sender, FngetOpenGiftGivenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetOpenGiftGivenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetOpenGiftGivenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetSubmittedGiftGivenCompletedEventHandler(object sender, FngetSubmittedGiftGivenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetSubmittedGiftGivenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetSubmittedGiftGivenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateGiftReceivedCompletedEventHandler(object sender, FnCreateGiftReceivedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateGiftReceivedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateGiftReceivedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertGiftReceivedLinesCompletedEventHandler(object sender, FnInsertGiftReceivedLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertGiftReceivedLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertGiftReceivedLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetOpenGiftReceivedCompletedEventHandler(object sender, FngetOpenGiftReceivedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetOpenGiftReceivedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetOpenGiftReceivedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetSubmittedGiftReceivedCompletedEventHandler(object sender, FngetSubmittedGiftReceivedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetSubmittedGiftReceivedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetSubmittedGiftReceivedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitGiftReceivedCompletedEventHandler(object sender, FnSubmitGiftReceivedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitGiftReceivedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitGiftReceivedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendGiftReceivedNotificationToApplicantCompletedEventHandler(object sender, FnSendGiftReceivedNotificationToApplicantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendGiftReceivedNotificationToApplicantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendGiftReceivedNotificationToApplicantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendGiftReceivedNotificationToCueCompletedEventHandler(object sender, FnSendGiftReceivedNotificationToCueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendGiftReceivedNotificationToCueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendGiftReceivedNotificationToCueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateConflictofInterestCompletedEventHandler(object sender, FnCreateConflictofInterestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateConflictofInterestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateConflictofInterestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertConflictLinesCompletedEventHandler(object sender, FnInsertConflictLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertConflictLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertConflictLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetOpenConflictCompletedEventHandler(object sender, FngetOpenConflictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetOpenConflictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetOpenConflictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetSubmittedConflictCompletedEventHandler(object sender, FngetSubmittedConflictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetSubmittedConflictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetSubmittedConflictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591